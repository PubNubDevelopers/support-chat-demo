{"version":3,"sources":["assets/images/8fb65c19677a1d8770ff89a500350d6b3aada798.png","assets/images/99e27ff5381f87feb308e505e13e0a5384b45316.png","assets/images/ead465ad39218a5b3b6f9b43bb17da6f0c066b31.png","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","myName","name1","name2","first","capFirst","getRandomInt","length","last","generateName","pubnub","PubNub","publishKey","subscribeKey","uuid","presenceTimeout","channel","replace","SupportClient","usePubNub","useState","messages","setMessages","input","setInput","React","show","toggleShow","emojiShow","toggleEmojiShow","divRef","useRef","messageRef","current","sendMessage","useCallback","message","a","publish","sender","name","useEffect","listener","event","code","preventDefault","document","addEventListener","removeEventListener","Container","NewConversationsRow","EmojiSelector","showPreview","showSkinTones","onSelect","e","native","SelectedDirectChannel","MessageBg","AssignedToRow","AssignedTo","AssignedToNameGroup","AssignedToNameStack","AssignedToName","AssignedToImageColumn","AssignedToImage","src","require","ChannelColumn","Channel","Status","MessageList","style","overflow","map","messageIndex","NewMessage","key","AgentName","AgentAvatarRow","AgentAvatar","AgentAvatarImg","AgentMessageAreaStack","ClientName","ClientMessageAreaStack","ref","MessageInputBG","TextInputAreaRow","TextInputArea","InputRow","Input","type","placeholder","value","maxlength","onChange","target","AddEmoji","onClick","PathStack","viewBox","position","height","width","top","left","backgroundColor","borderColor","strokeWidth","fill","fillOpacity","strokeOpacity","d","Send","Rectangle","margin","CancelBtn","OvalStack","stroke","transform","NewConversations","MessageBg1","CompanyLogo","Oval1Stack","CompanyLogo1","Path3StackStack","Path3Stack","Text1","Text2","MessageListBg1","MessageListBg2","Text","Users","UserRow","User","AgentAvatarImageStack","UserAvatarImage1","UserAvatarImage","User2","UserAvatarImage2Stack","UserAvatarImage5","UserAvatarImage4","User1","UserAvatarImage3Stack","UserAvatarImage3","UserAvatarImage2","NewConversation","addListener","messageEvent","scrollIntoView","behavior","subscribe","channels","channelPrefix","withPresence","Bg","NewConversationLabel","CancelBtn1","Oval2Stack","string","charAt","toUpperCase","slice","min","max","Math","floor","random","styled","div","img","span","App","client","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.4d60c4f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/8fb65c19677a1d8770ff89a500350d6b3aada798.f7eba482.png\";","module.exports = __webpack_public_path__ + \"static/media/99e27ff5381f87feb308e505e13e0a5384b45316.73400ed8.png\";","module.exports = __webpack_public_path__ + \"static/media/ead465ad39218a5b3b6f9b43bb17da6f0c066b31.b58e2bf0.png\";","import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport PubNub from 'pubnub';\nimport { PubNubProvider, usePubNub } from 'pubnub-react';\nimport styled from \"styled-components\";\nimport './App.css';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker } from 'emoji-mart';\n\nlet myName = generateName();\n \nconst pubnub = new PubNub({\n  publishKey: 'pub-c-a4c4e92e-a605-4508-89f7-c37faf290e88',\n  subscribeKey: 'sub-c-3035268e-a0fe-11ea-8e2f-c62edd1c297d',\n  uuid: myName,\n  presenceTimeout: 20\n});\nconst channelPrefix = 'supportChannel.';\nconst channel = channelPrefix+myName.replace(/\\s/g, '');\n  \nconst SupportClient = () => {\n  const pubnub = usePubNub();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [show, toggleShow] = React.useState(false);\n  const [emojiShow, toggleEmojiShow] = React.useState(false);\n  const divRef = useRef(null);\n  const messageRef = useRef([]);\n  messageRef.current = messages;\n\n  const sendMessage = useCallback(\n    async message => {\n      if (input) {\n        await pubnub.publish({\n          message: {sender:\"client\",name:myName,message:input.replace(/<[^>]*>?/gm, '')},\n          channel:channel\n        });\n        setInput('');\n      }\n    },\n    [pubnub, setInput, input]\n  );\n\n  function startPubNub() {\n    pubnub.addListener({\n      message: messageEvent => {\n        if (messageEvent.channel === channel) {\n          setMessages([...messageRef.current, messageEvent.message] as any);\n          divRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n      },\n    });\n    pubnub.subscribe({\n        channels: [channel, channelPrefix+\"*\"],\n        withPresence: true\n    });\n  }\n\n  useEffect(() => {\n    const listener = event => {\n      if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\n        event.preventDefault();\n        sendMessage(input);\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => {\n      document.removeEventListener(\"keydown\", listener);\n    };\n  }, [input, sendMessage]);\n\n  return (\n    <Container>\n      <NewConversationsRow>\n      {emojiShow && <EmojiSelector>\n        <Picker \n          showPreview={false}\n          showSkinTones={false}\n          onSelect={e => {setInput(input+e.native);toggleEmojiShow(!emojiShow);}}\n        />\n      </EmojiSelector>}\n        {show && <SelectedDirectChannel>\n          <MessageBg>\n            <AssignedToRow>\n              <AssignedTo>\n                <AssignedToNameGroup>\n                  <AssignedToNameStack>\n                    <AssignedToName>Phil</AssignedToName>\n                  </AssignedToNameStack>\n                  <AssignedToImageColumn>\n                    <AssignedToImage\n                      src={require(\"./assets/images/8fb65c19677a1d8770ff89a500350d6b3aada798.png\")}\n                    ></AssignedToImage>\n                  </AssignedToImageColumn>\n                </AssignedToNameGroup>\n              </AssignedTo>\n              <ChannelColumn>\n                <Channel>Customer Support Experts</Channel>\n                <Status>The team typically replies in a few minutes.</Status>\n              </ChannelColumn>\n            </AssignedToRow>\n            <MessageList  style={{overflow: \"scroll\"}}>\n              {messages.map((message, messageIndex) => {\n                if (message.sender === \"agent\") {\n                  return (\n                    <NewMessage key={`message-${messageIndex}`}>\n                      <AgentName>Phil (Agent)</AgentName>\n                      <AgentAvatarRow>\n                        <AgentAvatar>\n                          <AgentAvatarImg\n                            src={require(\"./assets/images/8fb65c19677a1d8770ff89a500350d6b3aada798.png\")}\n                          ></AgentAvatarImg>\n                        </AgentAvatar>\n                        <AgentMessageAreaStack>\n                           {message.message.replace(/<[^>]*>?/gm, '')}\n                        </AgentMessageAreaStack>\n                      </AgentAvatarRow>\n                    </NewMessage>\n                  );\n                } else {\n                  return (\n                    <NewMessage key={`message-${messageIndex}`}>\n                      <ClientName>{myName} (You)</ClientName>\n                      <AgentAvatarRow>\n                        <ClientMessageAreaStack>\n                           {message.message.replace(/<[^>]*>?/gm, '')}\n                        </ClientMessageAreaStack>\n                      </AgentAvatarRow>\n                    </NewMessage>\n                  );\n                }\n              })}\n              <div ref={divRef} />\n            </MessageList>\n              <MessageInputBG>\n                <TextInputAreaRow>\n                  <TextInputArea>\n                    <InputRow>\n                      <Input\n                        type=\"text\"\n                        placeholder=\"Type your message\"\n                        value={input}\n                        maxlength=\"250\"\n                        onChange={e => setInput(e.target.value)}\n                      />\n                      <AddEmoji onClick={() => {toggleEmojiShow(!emojiShow)}}>\n                        <PathStack>\n                          <svg\n                            viewBox=\"0 0 12 12\"\n                            style={{\n                              position: \"absolute\",\n                              height: 12,\n                              width: 12,\n                              top: 0,\n                              left: 0,\n                              backgroundColor: \"transparent\",\n                              borderColor: \"transparent\"\n                            }}\n                          >\n                            <path\n                              strokeWidth={0}\n                              fill=\"rgba(27,27,27,1)\"\n                              fillOpacity={1}\n                              strokeOpacity={1}\n                              d=\"M11.37 6.00 C11.37 8.96 8.96 11.37 6.00 11.37 C3.04 11.37 0.63 8.96 0.63 6.00 C0.63 3.04 3.04 0.63 6.00 0.63 M10.24 10.24 C11.38 9.11 12.00 7.60 12.00 6.00 C12.00 4.40 11.38 2.89 10.24 1.76 C9.11 0.62 7.60 0.00 6.00 0.00 C4.40 0.00 2.89 0.62 1.76 1.76 C0.62 2.89 0.00 4.40 0.00 6.00 C0.00 7.60 0.62 9.11 1.76 10.24 C2.89 11.38 4.40 12.00 6.00 12.00 \"\n                            ></path>\n                          </svg>\n                          <svg\n                            viewBox=\"0 0 8.21 2.53\"\n                            style={{\n                              position: \"absolute\",\n                              height: 3,\n                              width: 8,\n                              top: 3,\n                              left: 2,\n                              backgroundColor: \"transparent\",\n                              borderColor: \"transparent\"\n                            }}\n                          >\n                            <path\n                              strokeWidth={0}\n                              fill=\"rgba(27,27,27,1)\"\n                              fillOpacity={1}\n                              strokeOpacity={1}\n                              d=\"M5.22 1.90 C5.22 1.90 5.05 1.49 5.05 1.26 C5.05 1.18 5.06 1.10 5.08 1.02 C5.08 1.01 5.08 1.01 5.08 1.01 C5.11 0.88 5.22 0.63 5.22 0.63 L7.41 0.63 C7.41 0.63 7.58 1.04 7.58 1.26 C7.58 1.49 7.41 1.90 7.41 1.90 Z M0.80 1.90 C0.80 1.90 0.63 1.49 0.63 1.26 C0.63 1.04 0.80 0.63 0.80 0.63 L2.99 0.63 C2.99 0.63 3.11 0.88 3.13 1.01 C3.13 1.01 3.13 1.01 3.13 1.02 C3.15 1.10 3.16 1.18 3.16 1.26 C3.16 1.49 2.99 1.90 2.99 1.90 Z M7.83 0.13 L7.58 0.00 L5.05 0.00 C5.05 0.00 4.86 0.05 4.80 0.13 C4.68 0.28 4.53 0.63 4.53 0.63 L3.68 0.63 C3.68 0.63 3.53 0.28 3.41 0.13 C3.35 0.05 3.16 0.00 3.16 0.00 L0.63 0.00 C0.63 0.00 0.44 0.05 0.38 0.13 C0.13 0.46 0.00 0.85 0.00 1.26 C0.00 1.68 0.13 2.07 0.38 2.40 C0.44 2.48 0.63 2.53 0.63 2.53 L3.16 2.53 C3.16 2.53 3.35 2.48 3.41 2.40 C3.66 2.07 3.79 1.26 3.79 1.26 L4.42 1.26 C4.42 1.26 4.55 2.07 4.80 2.40 C4.86 2.48 5.05 2.53 5.05 2.53 L7.58 2.53 C7.58 2.53 7.77 2.48 7.83 2.40 C8.08 2.07 8.21 1.68 8.21 1.27 C8.21 0.85 7.83 0.13 7.83 0.13 Z\"\n                            ></path>\n                          </svg>\n                          <svg\n                            viewBox=\"0 0 6.26 3.79\"\n                            style={{\n                              position: \"absolute\",\n                              height: 4,\n                              width: 6,\n                              top: 6,\n                              left: 2,\n                              backgroundColor: \"transparent\",\n                              borderColor: \"transparent\"\n                            }}\n                          >\n                            <path\n                              strokeWidth={0}\n                              fill=\"rgba(27,27,27,1)\"\n                              fillOpacity={1}\n                              strokeOpacity={1}\n                              d=\"M4.05 3.79 C3.08 3.79 2.13 3.44 1.39 2.81 C0.66 2.18 0.16 1.31 0.00 0.37 C-0.02 0.20 0.09 0.03 0.26 0.00 C0.44 -0.02 0.60 0.09 0.63 0.26 C0.91 1.94 2.35 3.16 4.05 3.16 C4.66 3.16 5.26 3.00 5.79 2.69 C5.94 2.61 6.13 2.66 6.22 2.81 C6.31 2.96 6.26 3.15 6.11 3.24 C5.48 3.60 4.77 3.79 4.05 3.79 Z\"\n                            ></path>\n                          </svg>\n                        </PathStack>\n                      </AddEmoji>\n                    </InputRow>\n                  </TextInputArea>\n                  <Send onClick={e => {\n                    e.preventDefault();\n                    sendMessage(input);\n                  }}>\n                    <Rectangle>\n                      <svg\n                        viewBox=\"0 0 13.33 12\"\n                        style={{\n                          height: 12,\n                          width: 13,\n                          backgroundColor: \"transparent\",\n                          borderColor: \"transparent\",\n                          margin:6\n                        }}\n                      >\n                        <path\n                          strokeWidth={0}\n                          fill=\"rgba(255,255,255,1)\"\n                          fillOpacity={1}\n                          strokeOpacity={1}\n                          d=\"M9.50 11.04 L6.86 8.42 L12.21 1.83 L9.50 11.04 Z M4.67 7.16 L10.94 2.34 L6.15 8.24 L6.15 8.24 L4.67 10.06 Z M10.75 1.64 L4.27 6.63 L1.28 5.63 L10.75 1.64 Z M13.22 0.08 L13.22 0.08 L13.22 0.08 L13.22 0.08 Z M12.87 0.03 L0.20 5.36 C0.20 5.36 -0.01 5.54 0.00 5.68 C0.01 5.82 0.23 5.98 0.23 5.98 L4.00 7.24 L4.00 11.00 C4.00 11.00 4.09 11.27 4.22 11.31 C4.26 11.33 4.30 11.33 4.33 11.33 C4.43 11.33 4.59 11.21 4.59 11.21 L6.43 8.94 L9.43 11.90 C9.43 11.90 9.58 12.00 9.67 12.00 C9.69 12.00 9.72 12.00 9.75 11.99 C9.86 11.96 9.99 11.76 9.99 11.76 L13.32 0.43 L13.22 0.08 L12.87 0.03 Z\"\n                        ></path>\n                      </svg>\n                    </Rectangle>\n                  </Send>\n                </TextInputAreaRow>\n              </MessageInputBG>\n            </MessageBg>\n          <CancelBtn>\n            <OvalStack>\n              <svg\n                viewBox=\"0 0 36 36\"\n                style={{\n                  position: \"absolute\",\n                  height: 36,\n                  width: 36,\n                  top: 0,\n                  left: 0,\n                  backgroundColor: \"transparent\",\n                  borderColor: \"transparent\"\n                }}\n              >\n                <path\n                  strokeWidth={0}\n                  fill=\"rgba(89,122,213,1)\"\n                  fillOpacity={1}\n                  strokeOpacity={1}\n                  d=\"M18.00 36.00 C27.94 36.00 36.00 27.94 36.00 18.00 C36.00 8.06 27.94 0.00 18.00 0.00 C8.06 0.00 0.00 8.06 0.00 18.00 C0.00 27.94 8.06 36.00 18.00 36.00 Z\"\n                ></path>\n              </svg>\n              <svg\n                viewBox=\"-1 -1 12 12\"\n                style={{\n                  position: \"absolute\",\n                  height: 12,\n                  width: 12,\n                  top: 13,\n                  left: 13,\n                  backgroundColor: \"transparent\",\n                  borderColor: \"transparent\"\n                }}\n              >\n                <path\n                  strokeWidth={2}\n                  fill=\"transparent\"\n                  stroke=\"rgba(0,0,0,1)\"\n                  fillOpacity={1}\n                  strokeOpacity={1}\n                  d=\"M1.32 8.71 L9.00 1.00 \"\n                ></path>\n              </svg>\n              <svg\n                viewBox=\"-1 -1 12 12\"\n                style={{\n                  position: \"absolute\",\n                  height: 12,\n                  width: 12,\n                  top: 13,\n                  left: 13,\n                  backgroundColor: \"transparent\",\n                  borderColor: \"transparent\",\n                  transform: \"rotate(undefined)\"\n                }}\n              >\n                <path\n                  strokeWidth={2}\n                  fill=\"transparent\"\n                  stroke=\"rgba(0,0,0,1)\"\n                  fillOpacity={1}\n                  strokeOpacity={1}\n                  d=\"M1.00 9.00 L9.00 1.00 \"\n                ></path>\n              </svg>\n            </OvalStack>\n          </CancelBtn>\n        </SelectedDirectChannel>}\n        {!show && <NewConversations>\n          <MessageBg1>\n            <CompanyLogo>\n              <Oval1Stack>\n                <svg\n                  viewBox=\"0 0 46 46\"\n                  style={{\n                    position: \"absolute\",\n                    height: 46,\n                    width: 46,\n                    top: 0,\n                    left: 0,\n                    backgroundColor: \"transparent\",\n                    borderColor: \"transparent\"\n                  }}\n                >\n                  <path\n                    strokeWidth={0}\n                    fill=\"rgba(255,102,83,1)\"\n                    fillOpacity={1}\n                    strokeOpacity={1}\n                    d=\"M23.00 46.00 C35.70 46.00 46.00 35.70 46.00 23.00 C46.00 10.30 35.70 0.00 23.00 0.00 C10.30 0.00 0.00 10.30 0.00 23.00 C0.00 35.70 10.30 46.00 23.00 46.00 Z\"\n                  ></path>\n                </svg>\n                <CompanyLogo1>\n                  <Path3StackStack>\n                    <Path3Stack>\n                      <svg\n                        viewBox=\"0 0 5 5\"\n                        style={{\n                          position: \"absolute\",\n                          height: 5,\n                          width: 5,\n                          top: 4,\n                          left: 10,\n                          backgroundColor: \"transparent\",\n                          borderColor: \"transparent\"\n                        }}\n                      >\n                        <path\n                          strokeWidth={0}\n                          fill=\"rgba(255,255,255,1)\"\n                          fillOpacity={1}\n                          strokeOpacity={1}\n                          d=\"M4.00 2.50 C4.00 3.33 3.33 4.00 2.50 4.00 C1.67 4.00 1.00 3.33 1.00 2.50 C1.00 1.67 1.67 1.00 2.50 1.00 M5.00 2.50 C5.00 1.12 3.88 0.00 2.50 0.00 C1.12 0.00 0.00 1.12 0.00 2.50 C0.00 3.88 1.12 5.00 2.50 5.00 \"\n                        ></path>\n                      </svg>\n                      <svg\n                        viewBox=\"0 0 19 19\"\n                        style={{\n                          position: \"absolute\",\n                          height: 19,\n                          width: 19,\n                          top: 0,\n                          left: 0,\n                          backgroundColor: \"transparent\",\n                          borderColor: \"transparent\"\n                        }}\n                      >\n                        <path\n                          strokeWidth={0}\n                          fill=\"rgba(255,255,255,1)\"\n                          fillOpacity={1}\n                          strokeOpacity={1}\n                          d=\"M14.04 10.75 C14.04 10.75 9.81 13.00 9.50 13.00 C9.50 13.00 9.29 13.00 8.74 12.61 C8.36 12.34 7.91 11.95 7.48 11.52 C7.05 11.10 6.66 10.65 6.39 10.26 C6.00 9.71 6.00 9.50 6.00 9.50 C6.00 9.19 6.42 7.04 8.25 4.96 C10.45 2.47 13.81 1.11 18.00 1.01 C17.89 5.20 14.04 10.75 14.04 10.75 L14.04 10.75 Z M9.19 16.89 C9.19 16.89 9.19 16.89 9.19 16.89 C9.19 16.89 9.19 16.89 9.19 16.89 Z M9.99 13.95 C10.65 13.83 11.69 13.49 12.83 12.84 C12.30 14.45 9.30 16.81 9.19 16.89 C9.22 16.82 9.92 15.08 9.99 13.95 Z M2.11 9.81 C3.06 8.43 4.52 6.71 6.16 6.17 C5.51 7.31 5.17 8.35 5.05 9.02 C3.90 9.09 2.90 9.42 2.11 9.81 Z M18.50 0.00 C18.50 0.00 13.59 0.44 11.63 1.31 C10.00 2.02 8.62 3.03 7.50 4.29 C7.29 4.53 7.10 4.77 6.92 5.01 C6.06 5.07 5.18 5.41 4.30 6.03 C3.55 6.55 2.80 7.28 2.07 8.19 C0.84 9.71 0.08 11.21 0.05 11.28 C-0.06 11.50 0.01 11.76 0.21 11.90 C0.29 11.97 0.40 12.00 0.50 12.00 C0.63 12.00 0.76 11.95 0.85 11.86 C0.86 11.85 1.34 11.38 2.15 10.92 C2.82 10.54 3.86 10.09 5.11 10.01 C5.43 10.82 6.34 11.79 6.77 12.23 C7.21 12.66 8.18 13.57 8.99 13.89 C8.91 15.14 8.46 16.18 8.08 16.85 C7.62 17.66 7.15 18.14 7.15 18.15 C6.97 18.32 6.95 18.59 7.09 18.79 C7.19 18.93 7.34 19.00 7.50 19.00 C7.58 19.00 7.65 18.98 7.72 18.95 C7.79 18.91 9.29 18.16 10.81 16.93 C11.72 16.20 12.45 15.45 12.97 14.70 C13.59 13.82 13.93 12.94 13.99 12.08 C14.23 11.90 14.47 11.71 14.71 11.50 C15.97 10.38 16.97 8.99 17.69 7.37 C18.56 5.41 19.00 0.50 19.00 0.50 L19.00 0.00 L18.50 0.00 L18.50 0.00 Z\"\n                        ></path>\n                      </svg>\n                    </Path3Stack>\n                    <svg\n                      viewBox=\"0 0 7.05 7.05\"\n                      style={{\n                        position: \"absolute\",\n                        height: 7,\n                        width: 7,\n                        top: 13,\n                        left: 0,\n                        backgroundColor: \"transparent\",\n                        borderColor: \"transparent\"\n                      }}\n                    >\n                      <path\n                        strokeWidth={0}\n                        fill=\"rgba(255,255,255,1)\"\n                        fillOpacity={1}\n                        strokeOpacity={1}\n                        d=\"M4.84 1.00 C4.84 1.00 5.38 1.13 5.65 1.40 C5.98 1.73 6.10 2.06 6.03 2.41 C5.95 2.76 5.63 3.32 4.57 4.06 C3.77 4.60 2.70 5.14 1.37 5.68 C1.96 4.21 2.56 3.06 3.15 2.25 C3.76 1.43 4.84 1.00 4.84 1.00 L4.84 1.00 Z M0.50 7.05 C0.50 7.05 0.62 7.04 0.67 7.02 C4.54 5.61 6.67 4.13 7.00 2.63 C7.11 2.15 7.08 1.42 6.35 0.69 C5.89 0.23 5.38 0.00 4.84 0.00 C3.19 0.00 1.57 2.14 0.03 6.38 C-0.04 6.56 0.01 6.76 0.15 6.90 C0.24 7.00 0.50 7.05 0.50 7.05 Z\"\n                      ></path>\n                    </svg>\n                  </Path3StackStack>\n                </CompanyLogo1>\n              </Oval1Stack>\n            </CompanyLogo>\n            <Text1>Got a question?</Text1>\n            <Text2>We would love to help you!</Text2>\n            <MessageListBg1>\n              <MessageListBg2>\n                <Text>\n                  Our team of experts is ready to help with your queries!\n                </Text>\n                <Users>\n                  <UserRow>\n                    <User>\n                      <AgentAvatarImageStack>\n                        <UserAvatarImage1>\n                          <UserAvatarImage\n                            src={require(\"./assets/images/99e27ff5381f87feb308e505e13e0a5384b45316.png\")}\n                          ></UserAvatarImage>\n                        </UserAvatarImage1>\n                        <svg\n                          viewBox=\"-1.5 -1.5 16 16\"\n                          style={{\n                            position: \"absolute\",\n                            height: 16,\n                            width: 16,\n                            top: 29,\n                            left: 28,\n                            backgroundColor: \"transparent\",\n                            borderColor: \"transparent\"\n                          }}\n                        >\n                          <path\n                            strokeWidth={3}\n                            fill=\"rgba(126,211,33,1)\"\n                            stroke=\"rgba(181,194,229,1)\"\n                            fillOpacity={1}\n                            strokeOpacity={1}\n                            d=\"M6.50 11.50 C9.26 11.50 11.50 9.26 11.50 6.50 C11.50 3.74 9.26 1.50 6.50 1.50 C3.74 1.50 1.50 3.74 1.50 6.50 C1.50 9.26 3.74 11.50 6.50 11.50 Z\"\n                          ></path>\n                        </svg>\n                      </AgentAvatarImageStack>\n                    </User>\n                    <User2>\n                      <UserAvatarImage2Stack>\n                        <UserAvatarImage5>\n                          <UserAvatarImage4\n                            src={require(\"./assets/images/ead465ad39218a5b3b6f9b43bb17da6f0c066b31.png\")}\n                          ></UserAvatarImage4>\n                        </UserAvatarImage5>\n                        <svg\n                          viewBox=\"-1.5 -1.5 16 16\"\n                          style={{\n                            position: \"absolute\",\n                            height: 16,\n                            width: 16,\n                            top: 29,\n                            left: 27,\n                            backgroundColor: \"transparent\",\n                            borderColor: \"transparent\"\n                          }}\n                        >\n                          <path\n                            strokeWidth={3}\n                            fill=\"rgba(126,211,33,1)\"\n                            stroke=\"rgba(181,194,229,1)\"\n                            fillOpacity={1}\n                            strokeOpacity={1}\n                            d=\"M6.50 11.50 C9.26 11.50 11.50 9.26 11.50 6.50 C11.50 3.74 9.26 1.50 6.50 1.50 C3.74 1.50 1.50 3.74 1.50 6.50 C1.50 9.26 3.74 11.50 6.50 11.50 Z\"\n                          ></path>\n                        </svg>\n                      </UserAvatarImage2Stack>\n                    </User2>\n                    <User1>\n                      <UserAvatarImage3Stack>\n                        <UserAvatarImage3>\n                          <UserAvatarImage2\n                            src={require(\"./assets/images/8fb65c19677a1d8770ff89a500350d6b3aada798.png\")}\n                          ></UserAvatarImage2>\n                        </UserAvatarImage3>\n                        <svg\n                          viewBox=\"-1.5 -1.5 16 16\"\n                          style={{\n                            position: \"absolute\",\n                            height: 16,\n                            width: 16,\n                            top: 29,\n                            left: 29,\n                            backgroundColor: \"transparent\",\n                            borderColor: \"transparent\"\n                          }}\n                        >\n                          <path\n                            strokeWidth={3}\n                            fill=\"rgba(126,211,33,1)\"\n                            stroke=\"rgba(181,194,229,1)\"\n                            fillOpacity={1}\n                            strokeOpacity={1}\n                            d=\"M6.50 11.50 C9.26 11.50 11.50 9.26 11.50 6.50 C11.50 3.74 9.26 1.50 6.50 1.50 C3.74 1.50 1.50 3.74 1.50 6.50 C1.50 9.26 3.74 11.50 6.50 11.50 Z\"\n                          ></path>\n                        </svg>\n                      </UserAvatarImage3Stack>\n                    </User1>\n                  </UserRow>\n                </Users>\n                <NewConversation onClick={() => {toggleShow(!show);setMessages([...messages, {sender:\"agent\",name:\"agent\",message:\"You're connected to an agent. What can I help you with today?\"}]);startPubNub();}}>\n                  <Bg>\n                    <NewConversationLabel>New Conversation</NewConversationLabel>\n                  </Bg>\n                </NewConversation>\n              </MessageListBg2>\n            </MessageListBg1>\n          </MessageBg1>\n          <CancelBtn1>\n            <Oval2Stack>\n              <svg\n                viewBox=\"0 0 36 36\"\n                style={{\n                  position: \"absolute\",\n                  height: 36,\n                  width: 36,\n                  top: 0,\n                  left: 0,\n                  backgroundColor: \"transparent\",\n                  borderColor: \"transparent\"\n                }}\n              >\n                <path\n                  strokeWidth={0}\n                  fill=\"rgba(89,122,213,1)\"\n                  fillOpacity={1}\n                  strokeOpacity={1}\n                  d=\"M18.00 36.00 C27.94 36.00 36.00 27.94 36.00 18.00 C36.00 8.06 27.94 0.00 18.00 0.00 C8.06 0.00 0.00 8.06 0.00 18.00 C0.00 27.94 8.06 36.00 18.00 36.00 Z\"\n                ></path>\n              </svg>\n              <svg\n                viewBox=\"-1 -1 12 12\"\n                style={{\n                  position: \"absolute\",\n                  height: 12,\n                  width: 12,\n                  top: 13,\n                  left: 13,\n                  backgroundColor: \"transparent\",\n                  borderColor: \"transparent\"\n                }}\n              >\n                <path\n                  strokeWidth={2}\n                  fill=\"transparent\"\n                  stroke=\"rgba(0,0,0,1)\"\n                  fillOpacity={1}\n                  strokeOpacity={1}\n                  d=\"M1.32 8.71 L9.00 1.00 \"\n                ></path>\n              </svg>\n              <svg\n                viewBox=\"-1 -1 12 12\"\n                style={{\n                  position: \"absolute\",\n                  height: 12,\n                  width: 12,\n                  top: 13,\n                  left: 13,\n                  backgroundColor: \"transparent\",\n                  borderColor: \"transparent\",\n                  transform: \"rotate(undefined)\"\n                }}\n              >\n                <path\n                  strokeWidth={2}\n                  fill=\"transparent\"\n                  stroke=\"rgba(0,0,0,1)\"\n                  fillOpacity={1}\n                  strokeOpacity={1}\n                  d=\"M1.00 9.00 L9.00 1.00 \"\n                ></path>\n              </svg>\n            </Oval2Stack>\n          </CancelBtn1>\n        </NewConversations>}\n      </NewConversationsRow>\n    </Container>\n  );\n};\n \nconst App = () => {\n  return (\n    <PubNubProvider client={pubnub}>\n      <SupportClient />\n    </PubNubProvider>\n  );\n};\n\nfunction capFirst(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction generateName(){\n  var name1 = [\"Darwin\",\"Natalee\",\"Ryann\",\"Maggie\",\"Scarlet\",\"Kassidy\",\"Matteo\",\"Ethen\",\"Zain\",\"Vivian\",\"Tess\",\"Krystal\",\"Liberty\",\"Brielle\",\"Jaycee\",\"Sylvia\",\"Eden\",\"Arianna\",\"Martha\",\"Jayson\",\"Lainey\",\"Jorden\",\"Daniela\",\"Mohammad\",\"Kathleen\",\"Reuben\",\"Shane\",\"Annie\",\"Logan\",\"Bo\",\"Darius\",\"Nadia\",\"Cristal\",\"Reid\",\"Thomas\",\"Anna\",\"Javion\",\"Gabriel\",\"Bennett\",\"Jerimiah\",\"Connor\",\"Bryant\",\"Parker\",\"Livia\",\"Ellie\",\"Esteban\",\"Morgan\",\"Toby\",\"Saige\",\"Imani\",\"Semaj\",\"Manuel\",\"Ansley\",\"Miah\",\"Ezequiel\",\"Makenzie\",\"Vincent\",\"Jacquelyn\",\"Rowan\",\"Leyla\",\"Evangeline\",\"Ella\",\"Briana\",\"Aaron\",\"Ciara\",\"Karla\",\"Jeffrey\",\"Damarion\",\"Raul\",\"Derick\",\"Jarrett\",\"Frances\",\"Xiomara\",\"Monica\",\"Deon\",\"Abigail\",\"Beau\",\"Angel\",\"Reese\",\"Kylee\",\"Ana\",\"Laci\",\"Madden\",\"Kaleigh\",\"Eduardo\",\"Leilani\",\"Aron\",\"Samson\",\"Trevon\",\"Cloe\",\"Jillian\",\"Avery\",\"Skylar\",\"Autumn\",\"Lesly\",\"Gael\",\"Emilio\",\"Mylee\",\"Courtney\",\"Francesca\",\"Jaydan\",\"Josie\",\"Victoria\",\"Jan\",\"Iliana\",\"Alannah\",\"Veronica\",\"Izaiah\",\"Stacy\",\"Callie\",\"Cynthia\",\"Gilberto\",\"Katelynn\",\"Jaylen\",\"Anahi\",\"Olivia\",\"Lincoln\",\"Niko\",\"Kiana\",\"Harold\",\"Lauren\",\"Adyson\",\"Jewel\",\"Adriana\",\"Mike\",\"Eve\",\"Johanna\",\"Maximillian\",\"Jakayla\",\"Tatiana\",\"Jake\",\"Tony\",\"Marlene\",\"Sara\",\"Jaylynn\",\"Jeffery\",\"Bryson\",\"Jesus\",\"Odin\",\"Anderson\",\"Chris\",\"Cadence\",\"Alfredo\",\"Janiah\",\"Matias\",\"Camren\",\"Nehemiah\",\"Cannon\",\"Dillon\",\"Kierra\",\"Lila\",\"Janet\",\"Jaelyn\",\"Roland\",\"Deacon\",\"Lilly\",\"Mallory\",\"Ryan\",\"Leo\",\"Carleigh\",\"Emma\",\"Evelyn\",\"Jordin\",\"Blaine\",\"Maleah\",\"Clayton\",\"Ryker\",\"Gerald\",\"Zack\",\"Alfred\",\"Julianna\",\"Finn\",\"Yadira\",\"Bailey\",\"Jaylan\",\"Cesar\",\"Arielle\",\"Michaela\",\"Tyson\",\"Lindsey\",\"Elias\",\"Carla\",\"Aedan\",\"Ashley\",\"Charles\",\"Enzo\",\"Luis\",\"Killian\",\"Samir\",\"Reece\",\"Yandel\",\"Teresa\",\"Mckinley\",\"Kendra\",\"Camryn\",\"Zavier\",\"Cody\",\"Ralph\",\"Brooklynn\",\"Casey\",\"Maeve\",\"Jayvon\",\"Davion\",\"Giada\",\"Cierra\",\"Marshall\",\"Alyvia\",\"Rodolfo\",\"Demarion\",\"Hana\",\"Esther\",\"Jose\",\"Alena\",\"Kamren\",\"Deven\",\"Tianna\",\"Beckett\",\"Phoenix\",\"Cayden\",\"Hazel\",\"Denise\",\"Kingston\",\"Charlie\",\"Miguel\",\"Carissa\",\"Jairo\",\"Adolfo\",\"Kaley\",\"Jaron\",\"Miracle\",\"Micaela\",\"Ally\",\"Louis\",\"Kyan\",\"Nicolas\",\"Steve\",\"Jackson\",\"Mckenzie\",\"Drake\",\"Willie\",\"Cali\",\"Joanna\",\"Kareem\",\"Halle\",\"Amina\",\"Chandler\",\"Melanie\",\"Darian\",\"Hassan\",\"Keyla\"];\n  var name2 = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\n  var first = capFirst(name1[getRandomInt(1, name1.length)]);\n  var last = capFirst(name2[getRandomInt(1, name2.length)]);\n  return (first + ' ' + last);\n}\n\n/* Styles */\n\nconst NewConversationsRow = styled.div`\n  height: 609px;\n  flex-direction: row;\n  display: flex;\n  flex: 1 1 0%;\n  position: absolute;\n  bottom 0;\n  right 0;\n  margin-right: 50px;\n  margin-bottom: 50px;\n  margin-top: auto;\n`;\n\nconst UserAvatarImage1 = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  height: 38px;\n  width: 38px;\n  opacity: 1;\n  background-color: transparent;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst UserAvatarImage = styled.img`\n  opacity: 1;\n  background-color: transparent;\n  flex: 1 1 0%;\n  height: 100%;\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AgentAvatarImageStack = styled.div`\n  width: 44px;\n  height: 45px;\n  position: relative;\n`;\n\nconst UserAvatarImage5 = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  height: 38px;\n  width: 38px;\n  opacity: 1;\n  background-color: transparent;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst UserAvatarImage4 = styled.img`\n  opacity: 1;\n  background-color: transparent;\n  flex: 1 1 0%;\n  height: 100%;\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst UserAvatarImage2Stack = styled.div`\n  width: 43px;\n  height: 45px;\n  position: relative;\n`;\n\nconst UserAvatarImage3 = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  height: 38px;\n  width: 38px;\n  opacity: 1;\n  background-color: transparent;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst UserAvatarImage2 = styled.img`\n  opacity: 1;\n  background-color: transparent;\n  flex: 1 1 0%;\n  height: 100%;\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst UserAvatarImage3Stack = styled.div`\n  width: 45px;\n  height: 45px;\n  position: relative;\n`;\n\nconst NewConversationLabel = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 12px;\n  margin-top: 7px;\n`;\n\nconst MessageList = styled.div`\n  height: 410px;\n  width: 252px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-top: 15px;\n  margin-left: 14px;\n  background-color: rgba(255,255,255,0.6);\n  overflow: \"scroll\";\n`;\n\nconst PathStack = styled.div`\n  width: 12px;\n  height: 12px;\n  position: relative;\n`;\n\nconst AgentAvatar = styled.div`\n  height: 30px;\n  width: 30px;\n  opacity: 1;\n  background-color: transparent;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst AgentAvatarImg = styled.img`\n  opacity: 1;\n  background-color: transparent;\n  flex: 1 1 0%;\n  height: 100%;\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NewMessage = styled.div`\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin: 10px 15px 15px 5px;\n`;\n\nconst EmojiSelector = styled.div`\n  position: absolute;\n  z-index:99;\n  right: 150;\n  bottom: 2;\n`;\n\nconst Input = styled.input`\n  height: 17px;\n  width: 145px;\n  border-radius: 0px;\n  border: 0px;\n  line-height: 17px;\n  background-color: transparent;\n  font-family: Arial;\n  font-size: 10px;\n`;\n\n//* Styles */\n\n\n/* Light style */ //*\nconst Container = styled.div`\n  display: flex;\n  background-color: rgba(247,247,247,1);\n  flex-direction: row;\n  height: 100%;\n  width: 100%;\n`;\n\nconst NewConversations = styled.div`\n  height: 427px;\n  width: 100%;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-top: 182px;\n`;\n\nconst MessageBg1 = styled.div`\n  height: 376px;\n  width: 280px;\n  border-radius: 10px;\n  background-color: rgba(99,135,237,0.8);\n  flex-direction: column;\n  display: flex;\n`;\n\nconst CompanyLogo = styled.div`\n  height: 46px;\n  width: 46px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-top: 24px;\n  margin-left: 116px;\n`;\n\nconst CompanyLogo1 = styled.div`\n  position: absolute;\n  top: 13px;\n  left: 14px;\n  height: 20px;\n  width: 20px;\n  opacity: 0.9321103050595237;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst Path3Stack = styled.div`\n  top: 0px;\n  left: 1px;\n  width: 19px;\n  height: 19px;\n  position: absolute;\n`;\n\nconst Path3StackStack = styled.div`\n  width: 20px;\n  height: 20px;\n  position: relative;\n`;\n\nconst Oval1Stack = styled.div`\n  width: 46px;\n  height: 46px;\n  position: relative;\n`;\n\nconst Text1 = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 14px;\n  margin-top: 10px;\n`;\n\nconst Text2 = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 14px;\n  margin-top: 1px;\n`;\n\nconst MessageListBg1 = styled.div`\n  height: 226px;\n  width: 252px;\n  background-color: rgba(255,255,255,0.3);\n  flex-direction: column;\n  display: flex;\n  margin-top: 19px;\n  margin-left: 14px;\n`;\n\nconst MessageListBg2 = styled.div`\n  height: 210px;\n  width: 252px;\n  transform: [\n      {\n      scaleX: -1,\n      \n    },\n      \n    ];\n  background-color: rgba(255,255,255,0.4);\n  flex-direction: column;\n  display: flex;\n  margin-top: 16px;\n`;\n\nconst Text = styled.span`\n  font-family: Arial;\n  height: 39px;\n  width: 172px;\n  opacity: 1;\n  background-color: transparent;\n  line-height: 16px;\n  text-align: center;\n  color: rgba(51,51,51,1);\n  font-size: 12px;\n  margin-top: 38px;\n  margin-left: 40px;\n`;\n\nconst Users = styled.div`\n  height: 40px;\n  width: 142px;\n  opacity: 1;\n  flex-direction: row;\n  display: flex;\n  margin-top: 10px;\n  margin-left: 55px;\n`;\n\nconst User = styled.div`\n  height: 40px;\n  width: 39px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst User2 = styled.div`\n  height: 40px;\n  width: 38px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-left: 12px;\n`;\n\nconst User1 = styled.div`\n  height: 40px;\n  width: 40px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-left: 13px;\n`;\n\nconst UserRow = styled.div`\n  height: 40px;\n  flex-direction: row;\n  display: flex;\n  flex: 1 1 0%;\n`;\n\nconst NewConversation = styled.div`\n  height: 28px;\n  width: 143px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-top: 23px;\n  margin-left: 54px;\n  cursor: pointer;\n`;\n\nconst Bg = styled.div`\n  height: 28px;\n  width: 143px;\n  border-radius: 7px;\n  background-color: rgba(89,122,213,1);\n  flex-direction: column;\n  display: flex;\n`;\n\nconst CancelBtn1 = styled.div`\n  height: 36px;\n  width: 36px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-top: 15px;\n  margin-left: 244px;\n`;\n\nconst Oval2Stack = styled.div`\n  width: 36px;\n  height: 36px;\n  position: relative;\n`;\n\nconst SelectedDirectChannel = styled.div`\n  height: 600px;\n  width: 280px;\n  opacity: 1;\n  flex-direction: column;\n  margin-left: 33px;\n  display: flex;\n`;\n\nconst MessageBg = styled.div`\n  height: 559px;\n  width: 280px;\n  border-radius: 10px;\n  background-color: rgba(99,135,237,0.7);\n  flex-direction: column;\n  display: flex;\n`;\n\nconst AssignedTo = styled.div`\n  height: 57px;\n  width: 38px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst AssignedToName = styled.span`\n  font-family: Arial;\n  position: absolute;\n  top: 13px;\n  left: 0px;\n  opacity: 1;\n  background-color: transparent;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 12px;\n`;\n\nconst AssignedToNameStack = styled.div`\n  top: 29px;\n  left: 11px;\n  width: 32px;\n  height: 28px;\n  position: absolute;\n`;\n\nconst AssignedToImageColumn = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  height: 38px;\n  width: 38px;\n  opacity: 1;\n  background-color: transparent;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst AssignedToImage = styled.img`\n  opacity: 1;\n  background-color: transparent;\n  flex: 1 1 0%;\n  height: 100%;\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AssignedToNameGroup = styled.div`\n  width: 43px;\n  height: 57px;\n  position: relative;\n`;\n\nconst Channel = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 14px;\n`;\n\nconst Status = styled.span`\n  font-family: Arial;\n  height: 30px;\n  width: 162px;\n  opacity: 1;\n  background-color: transparent;\n  color: rgba(255,255,255,1);\n  font-size: 12px;\n  margin-top: 5px;\n  margin-left: 1px;\n`;\n\nconst ChannelColumn = styled.div`\n  width: 172px;\n  flex-direction: column;\n  display: flex;\n  margin-left: 18px;\n  margin-bottom: 5px;\n`;\n\nconst AssignedToRow = styled.div`\n  height: 57px;\n  flex-direction: row;\n  display: flex;\n  margin-top: 24px;\n  margin-left: 28px;\n  margin-right: 24px;\n`;\n\nconst AgentName = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: left;\n  color: rgba(85,85,85,1);\n  font-size: 12px;\n  letter-spacing: -0.2046153846153847px;\n  margin-right: 10px;\n`;\n\nconst ClientName = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: right;\n  color: rgba(85,85,85,1);\n  font-size: 12px;\n  letter-spacing: -0.2046153846153847px;\n  margin-left: 10px;\n`;\n\nconst AgentMessageAreaStack = styled.div`\n  padding: 10px;\n  margin-left: 6px;\n  position: relative;\n  border-radius: 10px;\n  background-color: rgba(255,255,255,1);\n  font-family: Arial;\n  line-height: 16px;\n  font-size: 13px;\n`;\n\nconst AgentAvatarRow = styled.div`\n  flex-direction: row;\n  display: flex;\n  margin-top: 1px;\n`;\n\nconst ClientMessageAreaStack = styled.div`\n  padding: 10px;\n  margin-left: auto;\n  position: relative;\n  border-radius: 10px;\n  background-color: rgba(89,122,213,1);\n  color: rgba(255,255,255,1);\n  font-family: Arial;\n  line-height: 16px;\n  font-size: 13px;\n`;\n\nconst MessageInputBG = styled.div`\n  height: 35px;\n  width: 252px;\n  opacity: 1;\n  background-color: rgba(255,255,255,0.6);\n  flex-direction: row;\n  display: flex;\n  margin-left: 14px;\n`;\n\nconst TextInputArea = styled.div`\n  height: 24px;\n  width: 190px;\n  border-radius: 9px;\n  background-color: rgba(0,0,0,0.06999999999999999);\n  flex-direction: row;\n  display: flex;\n  margin-left: 10px;\n`;\n\nconst AddEmoji = styled.div`\n  height: 12px;\n  width: 12px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-left: 10px;\n  margin-top: 2px;\n`;\n\nconst InputRow = styled.div`\n  height: 17px;\n  flex-direction: row;\n  display: flex;\n  flex: 1 1 0%;\n  margin-right: 8px;\n  margin-left: 8px;\n  margin-top: 4px;\n`;\n\n\n\nconst Send = styled.div`\n  height: 24px;\n  width: 28px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-left: 10px;\n  cursor: pointer;\n`;\n\nconst Rectangle = styled.div`\n  height: 24px;\n  width: 28px;\n  border-radius: 9px;\n  background-color: rgba(89,122,213,1);\n  flex-direction: column;\n  display: flex;\n`;\n\nconst TextInputAreaRow = styled.div`\n  height: 24px;\n  flex-direction: row;\n  display: flex;\n  flex: 1 1 0%;\n`;\n\nconst CancelBtn = styled.div`\n  height: 36px;\n  width: 36px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-top: 14px;\n  margin-left: 244px;\n`;\n\nconst OvalStack = styled.div`\n  width: 36px;\n  height: 36px;\n  position: relative;\n`;\n//* Light Style */\n\n/* Dark Style */ /*\nconst Container = styled.div`\n  display: flex;\n  background-color: rgba(247,247,247,1);\n  flex-direction: column;\n  height: 100vh;\n  width: 100vw;\n`;\n\nconst DesktopBg = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  height: 721px;\n  width: 1281px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst DesktopBg1 = styled.img`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  height: 720px;\n  width: 1280px;\n  opacity: 1;\n  background-color: transparent;\n  object-fit: cover;\n`;\n\nconst Gradient = styled.div`\n  position: absolute;\n  top: 1px;\n  left: 641px;\n  height: 720px;\n  width: 640px;\n  background-image: radial-gradient(circle at 71% 48%,rgba(0,0,0,0.7) 0%, rgba(0,0,0,0) 119%);\n`;\n\nconst DesktopBg1Stack = styled.div`\n  width: 1281px;\n  height: 721px;\n  position: relative;\n`;\n\nconst SelectedDirectChannel = styled.div`\n  position: absolute;\n  top: 82px;\n  left: 953px;\n  height: 609px;\n  width: 280px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst MessageBg = styled.div`\n  height: 559px;\n  width: 280px;\n  border-radius: 10px;\n  background-color: rgba(0,0,0,0.7);\n  flex-direction: column;\n  display: flex;\n`;\n\nconst AssignedTo = styled.div`\n  height: 57px;\n  width: 38px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst AssignedToName = styled.span`\n  font-family: Arial;\n  position: absolute;\n  top: 13px;\n  left: 0px;\n  opacity: 1;\n  background-color: transparent;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 12px;\n`;\n\nconst AssignedToNameStack = styled.div`\n  top: 29px;\n  left: 11px;\n  width: 32px;\n  height: 28px;\n  position: absolute;\n`;\n\nconst AssignedToImageColumn = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  height: 38px;\n  width: 38px;\n  opacity: 1;\n  background-color: transparent;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst AssignedToImage = styled.img`\n  opacity: 1;\n  background-color: transparent;\n  flex: 1 1 0%;\n  height: 100%;\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst AssignedToNameGroup = styled.div`\n  width: 43px;\n  height: 57px;\n  position: relative;\n`;\n\nconst Channel = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 14px;\n`;\n\nconst Status = styled.span`\n  font-family: Arial;\n  height: 30px;\n  width: 162px;\n  opacity: 1;\n  background-color: transparent;\n  color: rgba(255,255,255,1);\n  font-size: 12px;\n  margin-top: 5px;\n  margin-left: 1px;\n`;\n\nconst ChannelColumn = styled.div`\n  width: 172px;\n  flex-direction: column;\n  display: flex;\n  margin-left: 18px;\n  margin-bottom: 5px;\n`;\n\nconst AssignedToRow = styled.div`\n  height: 57px;\n  flex-direction: row;\n  display: flex;\n  margin-top: 24px;\n  margin-left: 28px;\n  margin-right: 24px;\n`;\n\nconst AgentName = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: right;\n  color: rgba(255,255,255,1);\n  font-size: 12px;\n  letter-spacing: -0.2046153846153847px;\n  margin-right: 10px;\n`;\n\nconst ClientName = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: left;\n  color: rgba(255,255,255,1);\n  font-size: 12px;\n  letter-spacing: -0.2046153846153847px;\n  margin-left: 10px;\n`;\n\nconst AgentMessageAreaStack = styled.div`\n  padding: 10px;\n  margin-left: 6px;\n  position: relative;\n  opacity: 1;\n  border-radius: 10px;\n  background-color: rgba(255,255,255,0.16);\n`;\n\nconst AgentAvatarRow = styled.div`\n  flex-direction: row;\n  display: flex;\n  margin-top: 1px;\n`;\n\nconst ClientMessageAreaStack = styled.div`\n  padding: 10px;\n  margin-left: 6px;\n  position: relative;\n  border-radius: 10px;\n  background-color: rgba(0,15,255,1);\n  color: rgba(255,255,255,1);\n  font-family: Arial;\n  line-height: 16px;\n  font-size: 13px;\n`;\n\nconst ReceiptRead1Stack = styled.div`\n  width: 15px;\n  height: 8px;\n  margin-top: 2px;\n  margin-left: 175px;\n  position: relative;\n`;\n\nconst ReceiptDeliveredStack = styled.div`\n  width: 15px;\n  height: 8px;\n  margin-top: 13px;\n  position: relative;\n`;\n\nconst Message1Row = styled.div`\n  height: 21px;\n  flex-direction: row;\n  display: flex;\n  flex: 1 1 0%;\n  margin-right: 5px;\n  margin-left: 16px;\n  margin-top: 8px;\n`;\n\nconst MessageInputBG = styled.div`\n  height: 24px;\n  width: 231px;\n  opacity: 1;\n  flex-direction: row;\n  display: flex;\n  margin-top: 13px;\n  margin-left: 9px;\n`;\n\nconst TextInputArea = styled.div`\n  height: 24px;\n  width: 190px;\n  border-radius: 9px;\n  background-color: rgba(255,255,255,0.1);\n  flex-direction: row;\n  display: flex;\n  margin-left: 10px;\n`;\n\nconst AddEmoji = styled.div`\n  height: 12px;\n  width: 12px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-left: 10px;\n  margin-top: 2px;\n`;\n\nconst Path1Stack = styled.div`\n  width: 12px;\n  height: 12px;\n  position: relative;\n`;\n\nconst InputRow = styled.div`\n  height: 17px;\n  flex-direction: row;\n  display: flex;\n  flex: 1 1 0%;\n  margin-right: 8px;\n  margin-left: 8px;\n  margin-top: 4px;\n`;\n\nconst Send = styled.div`\n  height: 24px;\n  width: 28px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-left: 10px;\n  cursor: pointer;\n`;\n\nconst Rectangle = styled.div`\n  height: 24px;\n  width: 28px;\n  border-radius: 9px;\n  background-color: rgba(0,15,255,1);\n  flex-direction: column;\n  display: flex;\n`;\n\nconst TextInputAreaRow = styled.div`\n  height: 24px;\n  flex-direction: row;\n  display: flex;\n  flex: 1 1 0%;\n`;\n\nconst CancelBtn = styled.div`\n  height: 36px;\n  width: 36px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-top: 14px;\n  margin-left: 244px;\n`;\n\nconst OvalStack = styled.div`\n  width: 36px;\n  height: 36px;\n  position: relative;\n`;\n\nconst NewConversations = styled.div`\n  position: absolute;\n  top: 264px;\n  left: 641px;\n  height: 427px;\n  width: 280px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst MessageBg1 = styled.div`\n  height: 376px;\n  width: 280px;\n  border-radius: 10px;\n  background-color: rgba(0,0,0,0.7);\n  flex-direction: column;\n  display: flex;\n`;\n\nconst CompanyLogo = styled.div`\n  height: 46px;\n  width: 46px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-top: 24px;\n  margin-left: 116px;\n`;\n\nconst CompanyLogo1 = styled.div`\n  position: absolute;\n  top: 13px;\n  left: 14px;\n  height: 20px;\n  width: 20px;\n  opacity: 0.9321103050595237;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst Path3Stack = styled.div`\n  top: 0px;\n  left: 1px;\n  width: 19px;\n  height: 19px;\n  position: absolute;\n`;\n\nconst Path3StackStack = styled.div`\n  width: 20px;\n  height: 20px;\n  position: relative;\n`;\n\nconst Oval1Stack = styled.div`\n  width: 46px;\n  height: 46px;\n  position: relative;\n`;\n\nconst Text1 = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 14px;\n  margin-top: 10px;\n  margin-left: 92px;\n`;\n\nconst Text2 = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 14px;\n  margin-top: 1px;\n  margin-left: 57px;\n`;\n\nconst MessageListBg1 = styled.div`\n  height: 226px;\n  width: 252px;\n  background-color: rgba(255,255,255,0.1);\n  flex-direction: column;\n  display: flex;\n  margin-top: 19px;\n  margin-left: 14px;\n`;\n\nconst MessageListBg2 = styled.div`\n  height: 210px;\n  width: 252px;\n  transform: [\n      {\n      scaleX: -1,\n      \n    },\n      \n    ];\n  background-color: rgba(255,255,255,0.1);\n  flex-direction: column;\n  display: flex;\n  margin-top: 16px;\n`;\n\nconst Text = styled.span`\n  font-family: Arial;\n  height: 39px;\n  width: 172px;\n  opacity: 1;\n  background-color: transparent;\n  line-height: 16px;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 12px;\n  margin-top: 38px;\n  margin-left: 40px;\n`;\n\nconst Users = styled.div`\n  height: 40px;\n  width: 142px;\n  opacity: 1;\n  flex-direction: row;\n  display: flex;\n  margin-top: 10px;\n  margin-left: 55px;\n`;\n\nconst User = styled.div`\n  height: 40px;\n  width: 39px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst UserAvatar5 = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  height: 38px;\n  width: 38px;\n  opacity: 1;\n  background-color: transparent;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst UserAvatar4 = styled.img`\n  opacity: 1;\n  background-color: transparent;\n  flex: 1 1 0%;\n  height: 100%;\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst UserAvatar5Stack = styled.div`\n  width: 44px;\n  height: 45px;\n  position: relative;\n`;\n\nconst User1 = styled.div`\n  height: 40px;\n  width: 38px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-left: 12px;\n`;\n\nconst UserAvatar7 = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  height: 38px;\n  width: 38px;\n  opacity: 1;\n  background-color: transparent;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst UserAvatar6 = styled.img`\n  opacity: 1;\n  background-color: transparent;\n  flex: 1 1 0%;\n  height: 100%;\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst UserAvatar7Stack = styled.div`\n  width: 43px;\n  height: 45px;\n  position: relative;\n`;\n\nconst User2 = styled.div`\n  height: 40px;\n  width: 40px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-left: 13px;\n`;\n\nconst UserAvatar9 = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  height: 38px;\n  width: 38px;\n  opacity: 1;\n  background-color: transparent;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst UserAvatar8 = styled.img`\n  opacity: 1;\n  background-color: transparent;\n  flex: 1 1 0%;\n  height: 100%;\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst UserAvatar9Stack = styled.div`\n  width: 45px;\n  height: 45px;\n  position: relative;\n`;\n\nconst UserRow = styled.div`\n  height: 40px;\n  flex-direction: row;\n  display: flex;\n  flex: 1 1 0%;\n`;\n\nconst NewConversation = styled.div`\n  height: 28px;\n  width: 143px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-top: 23px;\n  margin-left: 54px;\n  cursor: pointer;\n`;\n\nconst Bg = styled.div`\n  height: 28px;\n  width: 143px;\n  border-radius: 7px;\n  background-color: rgba(0,15,255,1);\n  flex-direction: column;\n  display: flex;\n`;\n\nconst NewConversation1 = styled.span`\n  font-family: Arial;\n  opacity: 1;\n  background-color: transparent;\n  text-align: center;\n  color: rgba(255,255,255,1);\n  font-size: 12px;\n  margin-top: 7px;\n  margin-left: 23px;\n`;\n\nconst CancelBtn1 = styled.div`\n  height: 36px;\n  width: 36px;\n  opacity: 1;\n  flex-direction: column;\n  display: flex;\n  margin-top: 15px;\n  margin-left: 244px;\n`;\n\nconst Oval2Stack = styled.div`\n  width: 36px;\n  height: 36px;\n  position: relative;\n`;\n\nconst DesktopBgStack = styled.div`\n  width: 1281px;\n  height: 721px;\n  margin-top: -1px;\n  position: relative;\n`;\n//* Dark Style */\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}