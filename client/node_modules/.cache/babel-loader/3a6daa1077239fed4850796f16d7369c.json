{"ast":null,"code":"var _jsxFileName = \"/Users/chandler/Desktop/121-chat/support-chat-demo/client/src/App.tsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PubNub from 'pubnub';\nimport { PubNubProvider, usePubNub } from 'pubnub-react';\nimport './App.css';\nconst pubnub = new PubNub({\n  publishKey: \"pub-c-a4c4e92e-a605-4508-89f7-c37faf290e88\",\n  subscribeKey: \"pub-c-a4c4e92e-a605-4508-89f7-c37faf290e88\"\n});\nconst channels = ['supportChannel'];\n\nconst SupportClient = () => {\n  const pubnub = usePubNub();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    pubnub.addListener({\n      message: messageEvent => {\n        setMessages([...messages, messageEvent.message]);\n      }\n    });\n    pubnub.subscribe({\n      channels\n    });\n  }, [messages]);\n  const sendMessage = useCallback(async message => {\n    await pubnub.publish({\n      channel: channels[0],\n      message\n    });\n    setInput('');\n  }, [pubnub, setInput]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '500px',\n      height: '300px',\n      border: '1px solid black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'grey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"React Chat Example\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      height: '260px',\n      overflow: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, messages.map((message, messageIndex) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `message-${messageIndex}`,\n      style: {\n        display: 'inline-block',\n        float: 'left',\n        backgroundColor: '#eee',\n        color: 'black',\n        borderRadius: '20px',\n        margin: '5px',\n        padding: '8px 15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, message);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      height: '40px',\n      backgroundColor: 'lightgrey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      borderRadius: '5px',\n      flexGrow: 1,\n      fontSize: '18px'\n    },\n    placeholder: \"Type your message\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      backgroundColor: 'blue',\n      color: 'white',\n      borderRadius: '5px',\n      fontSize: '16px'\n    },\n    onClick: e => {\n      e.preventDefault();\n      sendMessage(input);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Send Message\")))));\n};\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(PubNubProvider, {\n    client: pubnub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SupportClient, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/chandler/Desktop/121-chat/support-chat-demo/client/src/App.tsx"],"names":["React","useCallback","useEffect","useState","PubNub","PubNubProvider","usePubNub","pubnub","publishKey","subscribeKey","channels","SupportClient","messages","setMessages","input","setInput","addListener","message","messageEvent","subscribe","sendMessage","publish","channel","width","height","border","backgroundColor","overflow","map","messageIndex","display","float","color","borderRadius","margin","padding","flexGrow","fontSize","e","target","value","preventDefault","App"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport PubNub from 'pubnub';\nimport { PubNubProvider, usePubNub } from 'pubnub-react';\nimport './App.css';\n \nconst pubnub = new PubNub({\n  publishKey: \"pub-c-a4c4e92e-a605-4508-89f7-c37faf290e88\",\n  subscribeKey: \"pub-c-a4c4e92e-a605-4508-89f7-c37faf290e88\"\n});\nconst channels = ['supportChannel'];\n  \nconst SupportClient = () => {\n  const pubnub = usePubNub();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n \n  useEffect(() => {\n    pubnub.addListener({\n      message: messageEvent => {\n        setMessages([...messages, messageEvent.message]);\n      },\n    });\n \n    pubnub.subscribe({ channels });\n  }, [messages]);\n \n  const sendMessage = useCallback(\n    async message => {\n      await pubnub.publish({\n        channel: channels[0],\n        message,\n      });\n \n      setInput('');\n    },\n    [pubnub, setInput]\n  );\n \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div\n          style={{\n            width: '500px',\n            height: '300px',\n            border: '1px solid black',\n          }}\n        >\n          <div style={{ backgroundColor: 'grey' }}>React Chat Example</div>\n          <div\n            style={{\n              backgroundColor: 'white',\n              height: '260px',\n              overflow: 'scroll',\n            }}\n          >\n            {messages.map((message, messageIndex) => {\n              return (\n                <div\n                  key={`message-${messageIndex}`}\n                  style={{\n                    display: 'inline-block',\n                    float: 'left',\n                    backgroundColor: '#eee',\n                    color: 'black',\n                    borderRadius: '20px',\n                    margin: '5px',\n                    padding: '8px 15px',\n                  }}\n                >\n                  {message}\n                </div>\n              );\n            })}\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              height: '40px',\n              backgroundColor: 'lightgrey',\n            }}\n          >\n            <input\n              type=\"text\"\n              style={{\n                borderRadius: '5px',\n                flexGrow: 1,\n                fontSize: '18px',\n              }}\n              placeholder=\"Type your message\"\n              value={input}\n              onChange={e => setInput(e.target.value)}\n            />\n            <button\n              style={{\n                backgroundColor: 'blue',\n                color: 'white',\n                borderRadius: '5px',\n                fontSize: '16px',\n              }}\n              onClick={e => {\n                e.preventDefault();\n                sendMessage(input);\n              }}\n            >\n              Send Message\n            </button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n};\n \nconst App = () => {\n  return (\n    <PubNubProvider client={pubnub}>\n      <SupportClient />\n    </PubNubProvider>\n  );\n};\n \nexport default App;"]},"metadata":{},"sourceType":"module"}