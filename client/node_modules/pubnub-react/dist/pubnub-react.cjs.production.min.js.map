{"version":3,"file":"pubnub-react.cjs.production.min.js","sources":["../src/context/PubNubContext.tsx","../src/context/PubNubConsumer.tsx","../src/context/PubNubProvider.tsx","../src/hooks/usePubNub.ts"],"sourcesContent":["import React from 'react';\nimport PubNub from 'pubnub';\n\nexport interface PubNubContextValue {\n  client: PubNub;\n}\n\nexport const PubNubContext = React.createContext<PubNubContextValue | null>(\n  null\n);\n","import React from 'react';\nimport PubNub from 'pubnub';\nimport invariant from 'ts-invariant';\n\nimport { PubNubContext } from './PubNubContext';\n\nexport interface PubNubConsumerProps {\n  children: (client: PubNub) => React.ReactChild | null;\n}\n\nexport const PubNubConsumer: React.FC<PubNubConsumerProps> = ({ children }) => {\n  const context = React.useContext(PubNubContext);\n\n  invariant(\n    context && context.client,\n    'Could not find \"client\" in the context of PubNubConsumer. ' +\n      'Wrap the root component in an <PubNubProvider>.'\n  );\n\n  return <>{children(context!.client)}</>;\n};\n","import React from 'react';\nimport PubNub from 'pubnub';\nimport invariant from 'ts-invariant';\n\nimport { PubNubContext } from './PubNubContext';\n\nexport interface PubNubProviderProps<PubNubInstance> {\n  client: PubNubInstance;\n  children: React.ReactNode | React.ReactNode[] | null;\n}\n\nfunction appendPnsdk(pubnub: any) {\n  if (typeof pubnub._addPnsdkSuffix === 'function') {\n    pubnub._addPnsdkSuffix('React/__VERSION__');\n  }\n}\n\nexport const PubNubProvider: React.FC<PubNubProviderProps<PubNub>> = ({\n  client,\n  children,\n}) => {\n  const contextValue = React.useMemo(() => {\n    return { client };\n  }, [client]);\n\n  invariant(\n    contextValue.client,\n    'PubNubProvider was not passed a client instance. Make ' +\n      'sure you pass in your client via the \"client\" prop.'\n  );\n\n  React.useEffect(() => {\n    appendPnsdk(contextValue.client);\n  }, []);\n\n  return (\n    <PubNubContext.Provider value={contextValue}>\n      {children}\n    </PubNubContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport PubNub from 'pubnub';\nimport invariant from 'ts-invariant';\n\nimport { PubNubContext } from '../context/PubNubContext';\n\nexport function usePubNub(): PubNub {\n  const context = useContext(PubNubContext);\n\n  invariant(\n    context && context.client,\n    'No PubNub Client instance can be found. Please ensure that you ' +\n      'have called `PubNubProvider` higher up in your tree.'\n  );\n\n  return context!.client;\n}\n"],"names":["PubNubContext","React","createContext","children","context","useContext","client","invariant","contextValue","useMemo","useEffect","pubnub","_addPnsdkSuffix","Provider","value"],"mappings":"8IAOaA,EAAgBC,EAAMC,cACjC,6BCE2D,gBAAGC,IAAAA,SACxDC,EAAUH,EAAMI,WAAWL,UAG/BI,GAAWA,EAAQE,QADrBC,MAMON,gCAAGE,EAASC,EAASE,iCCFuC,gBACnEA,IAAAA,OACAH,IAAAA,SAEMK,EAAeP,EAAMQ,QAAQ,iBAC1B,CAAEH,OAAAA,IACR,CAACA,WAGFE,EAAaF,QADfC,MAMAN,EAAMS,UAAU,WApBlB,IAAqBC,EACmB,mBADnBA,EAqBLH,EAAaF,QApBTM,iBAChBD,EAAOC,gBAAgB,gBAoBtB,IAGDX,gBAACD,EAAca,UAASC,MAAON,GAC5BL,qCC9BCC,EAAUC,aAAWL,UAGzBI,GAAWA,EAAQE,QADrBC,MAMOH,EAASE"}