{"version":3,"sources":["networking/modules/nativescript.js"],"names":["log","url","qs","res","_pickLogger","console","start","Date","getTime","timestamp","toISOString","logger","now","elapsed","timestampDone","xdr","method","params","body","endpoint","callback","status","operation","httpConfig","timeout","content","then","response","error","statusCode","toJSON","resp","_config","logVerbosity","e","errorData","category","_detectErrorCategory","get","getStandardOrigin","call","post","patch","del"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport { request as HttpRequest } from 'http';\nimport {\n  EndpointDefinition,\n  StatusAnnouncement,\n} from '../../core/flow_interfaces';\nimport { buildUrl } from '../utils';\n\nfunction log(url, qs, res) {\n  let _pickLogger = () => {\n    if (console && console.log) return console; // eslint-disable-line no-console\n    return console;\n  };\n\n  let start = new Date().getTime();\n  let timestamp = new Date().toISOString();\n  let logger = _pickLogger();\n  logger.log('<<<<<'); // eslint-disable-line no-console\n  logger.log(`[${timestamp}]`, '\\n', url, '\\n', qs); // eslint-disable-line no-console\n  logger.log('-----'); // eslint-disable-line no-console\n\n  let now = new Date().getTime();\n  let elapsed = now - start;\n  let timestampDone = new Date().toISOString();\n\n  logger.log('>>>>>>'); // eslint-disable-line no-console\n  logger.log(`[${timestampDone} / ${elapsed}]`, '\\n', url, '\\n', qs, '\\n', res); // eslint-disable-line no-console\n  logger.log('-----'); // eslint-disable-line no-console\n}\n\nfunction xdr(\n  method: string,\n  url: string,\n  params: Object,\n  body: string,\n  endpoint: EndpointDefinition,\n  callback: Function\n): void {\n  let status: StatusAnnouncement = {};\n  status.operation = endpoint.operation;\n\n  const httpConfig = {\n    method,\n    url: buildUrl(url, params),\n    timeout: endpoint.timeout,\n    content: body,\n  };\n\n  // $FlowFixMe\n  return HttpRequest(httpConfig)\n    .then((response) => {\n      status.error = false;\n\n      if (response.statusCode) {\n        status.statusCode = response.statusCode;\n      }\n\n      return response.content.toJSON();\n    })\n    .then((response) => {\n      let resp = response;\n\n      if (this._config.logVerbosity) {\n        log(url, params, resp);\n      }\n\n      callback(status, resp);\n    })\n    .catch((e) => {\n      status.error = true;\n      status.errorData = e;\n      status.category = this._detectErrorCategory(e);\n      callback(status, null);\n    });\n}\n\nexport function get(\n  params: Object,\n  endpoint: EndpointDefinition,\n  callback: Function\n) {\n  let url = this.getStandardOrigin() + endpoint.url;\n  return xdr.call(this, 'GET', url, params, '', endpoint, callback);\n}\n\nexport function post(\n  params: Object,\n  body: string,\n  endpoint: EndpointDefinition,\n  callback: Function\n) {\n  let url = this.getStandardOrigin() + endpoint.url;\n  return xdr.call(this, 'POST', url, params, body, endpoint, callback);\n}\n\nexport function patch(\n  params: Object,\n  body: string,\n  endpoint: EndpointDefinition,\n  callback: Function\n) {\n  let url = this.getStandardOrigin() + endpoint.url;\n  return xdr.call(this, 'PATCH', url, params, body, endpoint, callback);\n}\n\nexport function del(\n  params: Object,\n  endpoint: EndpointDefinition,\n  callback: Function\n) {\n  let url = this.getStandardOrigin() + endpoint.url;\n  return xdr.call(this, 'DELETE', url, params, '', endpoint, callback);\n}\n"],"file":"nativescript.js"}