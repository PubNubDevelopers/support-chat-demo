{"ast":null,"code":"import React, { useContext } from 'react';\nimport invariant from 'ts-invariant';\nvar PubNubContext = /*#__PURE__*/React.createContext(null);\n\nfunction appendPnsdk(pubnub) {\n  if (typeof pubnub._addPnsdkSuffix === 'function') {\n    pubnub._addPnsdkSuffix('React/2.0.0');\n  }\n}\n\nvar PubNubProvider = function PubNubProvider(_ref) {\n  var client = _ref.client,\n      children = _ref.children;\n  var contextValue = React.useMemo(function () {\n    return {\n      client: client\n    };\n  }, [client]);\n  !contextValue.client ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'PubNubProvider was not passed a client instance. Make ' + 'sure you pass in your client via the \"client\" prop.') : invariant(false) : void 0;\n  React.useEffect(function () {\n    appendPnsdk(contextValue.client);\n  }, []);\n  return React.createElement(PubNubContext.Provider, {\n    value: contextValue\n  }, children);\n};\n\nvar PubNubConsumer = function PubNubConsumer(_ref) {\n  var children = _ref.children;\n  var context = React.useContext(PubNubContext);\n  !(context && context.client) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Could not find \"client\" in the context of PubNubConsumer. ' + 'Wrap the root component in an <PubNubProvider>.') : invariant(false) : void 0;\n  return React.createElement(React.Fragment, null, children(context.client));\n};\n\nfunction usePubNub() {\n  var context = useContext(PubNubContext);\n  !(context && context.client) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'No PubNub Client instance can be found. Please ensure that you ' + 'have called `PubNubProvider` higher up in your tree.') : invariant(false) : void 0;\n  return context.client;\n}\n\nexport { PubNubConsumer, PubNubProvider, usePubNub };","map":{"version":3,"sources":["../src/context/PubNubContext.tsx","../src/context/PubNubProvider.tsx","../src/context/PubNubConsumer.tsx","../src/hooks/usePubNub.ts"],"names":["PubNubContext","React","pubnub","PubNubProvider","client","children","contextValue","appendPnsdk","value","PubNubConsumer","context","usePubNub","useContext"],"mappings":";;AAOO,IAAMA,aAAa,G,aAAGC,KAAK,CAALA,aAAAA,CAAtB,IAAsBA,CAAtB;;ACIP,SAAA,WAAA,CAAA,MAAA,EAAA;MACM,OAAOC,MAAM,CAAb,eAAA,KAAJ,U,EAAkD;AAChDA,IAAAA,MAAM,CAANA,eAAAA,CAAAA,aAAAA;;;;AAIJ,IAAaC,cAAc,GAA0C,SAAxDA,cAAwD,CAAA,IAAA,EAAA;MACnEC,MAAAA,GAAAA,IAAAA,CAAAA,M;MACAC,QAAAA,GAAAA,IAAAA,CAAAA,Q;MAEMC,YAAY,GAAG,KAAK,CAAL,OAAA,CAAc,YAAA;WAC1B;AAAEF,MAAAA,MAAM,EAANA;AAAF,K;AADY,GAAA,EAElB,CAFH,MAEG,CAFkB,C;GAKnBE,YAAY,CADd,M,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,SAAS,CAAA,KAAA,EAEP,2DAFF,qDAAS,CAAT,GAAA,SAAS,CAAT,KAAS,C,GAAT,KAAA,C;AAMAL,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAA;AACdM,IAAAA,WAAW,CAACD,YAAY,CAAxBC,MAAW,CAAXA;AADFN,GAAAA,EAAAA,EAAAA;SAKE,KAAA,CAAA,aAAA,CAACD,aAAa,CAAd,QAAA,EAAA;AAAwBQ,IAAAA,KAAK,EAAEF;AAA/B,GAAA,EADF,QACE,C;AAnBG,CAAP;;ICPaG,cAAc,GAAkC,SAAhDA,cAAgD,CAAA,IAAA,EAAA;MAAGJ,QAAAA,GAAAA,IAAAA,CAAAA,Q;MACxDK,OAAO,GAAGT,KAAK,CAALA,UAAAA,CAAhB,aAAgBA,C;IAGdS,OAAO,IAAIA,OAAO,CADpB,M,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,SAAS,CAAA,KAAA,EAEP,+DAFF,iDAAS,CAAT,GAAA,SAAS,CAAT,KAAS,C,GAAT,KAAA,C;SAMOT,KAAAA,CAAAA,aAAAA,CAAAA,KAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAGI,QAAQ,CAACK,OAAQ,CAA3B,MAAkB,CAAXT,C;AATF,C;;SCJSU,S,GAAAA;MACRD,OAAO,GAAGE,UAAU,CAA1B,aAA0B,C;IAGxBF,OAAO,IAAIA,OAAO,CADpB,M,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,SAAS,CAAA,KAAA,EAEP,oEAFF,sDAAS,CAAT,GAAA,SAAS,CAAT,KAAS,C,GAAT,KAAA,C;SAMOA,OAAQ,CAAf,M","sourcesContent":["import React from 'react';\nimport PubNub from 'pubnub';\n\nexport interface PubNubContextValue {\n  client: PubNub;\n}\n\nexport const PubNubContext = React.createContext<PubNubContextValue | null>(\n  null\n);\n","import React from 'react';\nimport PubNub from 'pubnub';\nimport invariant from 'ts-invariant';\n\nimport { PubNubContext } from './PubNubContext';\n\nexport interface PubNubProviderProps<PubNubInstance> {\n  client: PubNubInstance;\n  children: React.ReactNode | React.ReactNode[] | null;\n}\n\nfunction appendPnsdk(pubnub: any) {\n  if (typeof pubnub._addPnsdkSuffix === 'function') {\n    pubnub._addPnsdkSuffix('React/__VERSION__');\n  }\n}\n\nexport const PubNubProvider: React.FC<PubNubProviderProps<PubNub>> = ({\n  client,\n  children,\n}) => {\n  const contextValue = React.useMemo(() => {\n    return { client };\n  }, [client]);\n\n  invariant(\n    contextValue.client,\n    'PubNubProvider was not passed a client instance. Make ' +\n      'sure you pass in your client via the \"client\" prop.'\n  );\n\n  React.useEffect(() => {\n    appendPnsdk(contextValue.client);\n  }, []);\n\n  return (\n    <PubNubContext.Provider value={contextValue}>\n      {children}\n    </PubNubContext.Provider>\n  );\n};\n","import React from 'react';\nimport PubNub from 'pubnub';\nimport invariant from 'ts-invariant';\n\nimport { PubNubContext } from './PubNubContext';\n\nexport interface PubNubConsumerProps {\n  children: (client: PubNub) => React.ReactChild | null;\n}\n\nexport const PubNubConsumer: React.FC<PubNubConsumerProps> = ({ children }) => {\n  const context = React.useContext(PubNubContext);\n\n  invariant(\n    context && context.client,\n    'Could not find \"client\" in the context of PubNubConsumer. ' +\n      'Wrap the root component in an <PubNubProvider>.'\n  );\n\n  return <>{children(context!.client)}</>;\n};\n","import { useContext } from 'react';\nimport PubNub from 'pubnub';\nimport invariant from 'ts-invariant';\n\nimport { PubNubContext } from '../context/PubNubContext';\n\nexport function usePubNub(): PubNub {\n  const context = useContext(PubNubContext);\n\n  invariant(\n    context && context.client,\n    'No PubNub Client instance can be found. Please ensure that you ' +\n      'have called `PubNubProvider` higher up in your tree.'\n  );\n\n  return context!.client;\n}\n"]},"metadata":{},"sourceType":"module"}