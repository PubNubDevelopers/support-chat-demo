{"ast":null,"code":"var _jsxFileName = \"/Users/chandler/Desktop/121-chat/support-chat-demo/client/src/App.tsx\";\nimport React from 'react';\nimport PubNub from 'pubnub';\nimport { PubNubProvider, PubNubConsumer } from 'pubnub-react';\nimport './App.css';\nconst pubnub = new PubNub({\n  publishKey: \"pub-c-a4c4e92e-a605-4508-89f7-c37faf290e88\",\n  subscribeKey: \"pub-c-a4c4e92e-a605-4508-89f7-c37faf290e88\"\n});\nconst channels = ['awesomeChannel'];\n\nfunction App() {\n  const [messages, addMessage] = useState([]);\n  const [message, setMessage] = useState('');\n\n  const sendMessage = message => {\n    pubnub.publish({\n      channel: channels[0],\n      message\n    }, () => setMessage(''));\n  };\n\n  return /*#__PURE__*/React.createElement(PubNubProvider, {\n    client: pubnub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PubNubConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, client => {\n    client.addListener({\n      message: messageEvent => {\n        addMessage([...messages, messageEvent.message]);\n      }\n    });\n    client.subscribe({\n      channels\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '500px',\n      height: '300px',\n      border: '1px solid black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'grey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"React Chat Example\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      height: '260px',\n      overflow: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, messages.map((message, messageIndex) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `message-${messageIndex}`,\n      style: {\n        display: 'inline-block',\n        float: 'left',\n        backgroundColor: '#eee',\n        color: 'black',\n        borderRadius: '20px',\n        margin: '5px',\n        padding: '8px 15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }, message);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      height: '40px',\n      backgroundColor: 'lightgrey'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      borderRadius: '5px',\n      flexGrow: 1,\n      fontSize: '18px'\n    },\n    placeholder: \"Type your message\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      backgroundColor: 'blue',\n      color: 'white',\n      borderRadius: '5px',\n      fontSize: '16px'\n    },\n    onClick: e => {\n      e.preventDefault();\n      sendMessage(message);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"Send Message\"))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/chandler/Desktop/121-chat/support-chat-demo/client/src/App.tsx"],"names":["React","PubNub","PubNubProvider","PubNubConsumer","pubnub","publishKey","subscribeKey","channels","App","messages","addMessage","useState","message","setMessage","sendMessage","publish","channel","client","addListener","messageEvent","subscribe","width","height","border","backgroundColor","overflow","map","messageIndex","display","float","color","borderRadius","margin","padding","flexGrow","fontSize","e","target","value","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PubNub from 'pubnub';\nimport { PubNubProvider, PubNubConsumer } from 'pubnub-react';\nimport './App.css';\n\nconst pubnub = new PubNub({\n  publishKey: \"pub-c-a4c4e92e-a605-4508-89f7-c37faf290e88\",\n  subscribeKey: \"pub-c-a4c4e92e-a605-4508-89f7-c37faf290e88\"\n});\nconst channels = ['awesomeChannel'];\n\nfunction App() {\n  const [messages, addMessage] = useState([]);\n  const [message, setMessage] = useState('');\n\n  const sendMessage = message => {\n    pubnub.publish(\n      {\n        channel: channels[0],\n        message,\n      },\n      () => setMessage('')\n    );\n  };\n\n  return (\n    <PubNubProvider client={pubnub}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <PubNubConsumer>\n            {client => {\n              client.addListener({\n                message: messageEvent => {\n                  addMessage([...messages, messageEvent.message]);\n                },\n              });\n\n              client.subscribe({ channels });\n            }}\n          </PubNubConsumer>\n          <div\n            style={{\n              width: '500px',\n              height: '300px',\n              border: '1px solid black',\n            }}\n          >\n            <div style={{ backgroundColor: 'grey' }}>React Chat Example</div>\n            <div\n              style={{\n                backgroundColor: 'white',\n                height: '260px',\n                overflow: 'scroll',\n              }}\n            >\n              {messages.map((message, messageIndex) => {\n                return (\n                  <div\n                    key={`message-${messageIndex}`}\n                    style={{\n                      display: 'inline-block',\n                      float: 'left',\n                      backgroundColor: '#eee',\n                      color: 'black',\n                      borderRadius: '20px',\n                      margin: '5px',\n                      padding: '8px 15px',\n                    }}\n                  >\n                    {message}\n                  </div>\n                );\n              })}\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                height: '40px',\n                backgroundColor: 'lightgrey',\n              }}\n            >\n              <input\n                type=\"text\"\n                style={{\n                  borderRadius: '5px',\n                  flexGrow: 1,\n                  fontSize: '18px',\n                }}\n                placeholder=\"Type your message\"\n                value={message}\n                onChange={e => setMessage(e.target.value)}\n              />\n              <button\n                style={{\n                  backgroundColor: 'blue',\n                  color: 'white',\n                  borderRadius: '5px',\n                  fontSize: '16px',\n                }}\n                onClick={e => {\n                  e.preventDefault();\n                  sendMessage(message);\n                }}\n              >\n                Send Message\n              </button>\n            </div>\n          </div>\n        </header>\n      </div>\n    </PubNubProvider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}