{"version":3,"sources":["core/components/endpoint.js"],"names":["PubNubError","message","status","name","constructor","Error","createError","errorPayload","type","error","createValidationError","decideURL","endpoint","modules","incomingParams","usePost","postURL","usePatch","patchURL","getURL","getAuthToken","token","generatePNSDK","config","sdkName","base","sdkFamily","partnerId","getVersion","pnsdkSuffix","_getPnsdkSuffix","length","getHttpMethod","useDelete","signRequest","url","outgoingParams","crypto","httpMethod","timestamp","Math","floor","Date","getTime","signInput","publishKey","utils","signPamFromParams","payload","postPayload","JSON","stringify","patchPayload","signature","HMACSHA256","replace","networking","telemetryManager","requestId","uuidGenerator","createUUID","callback","promiseComponent","getOperation","operationConstants","PNTimeOperation","PNChannelGroupsOperation","Promise","createPromise","validationResult","validateParams","reject","promise","prepareParams","callInstance","networkingParams","operation","timeout","getRequestTimeout","headers","getRequestHeaders","uuid","UUID","pnsdk","telemetryLatencies","operationsLatencyForRequest","Object","keys","useInstanceId","instanceid","instanceId","useRequestId","requestid","isAuthSupported","tokenOrKey","getAuthKey","auth","secretKey","onResponse","stopLatencyMeasure","parsedPayload","handleResponse","fulfill","startLatencyMeasure","POST","PATCH","DELETE","GET","PNSubscribeOperation"],"mappings":"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","sourcesContent":["import uuidGenerator from './uuid';\nimport { StatusAnnouncement } from '../flow_interfaces';\nimport utils from '../utils';\nimport Config from './config';\nimport operationConstants from '../constants/operations';\n\nclass PubNubError extends Error {\n  constructor(message, status) {\n    super(message);\n    this.name = this.constructor.name;\n    this.status = status;\n    this.message = message;\n  }\n}\n\nfunction createError(errorPayload: Object, type: string): Object {\n  errorPayload.type = type;\n  errorPayload.error = true;\n  return errorPayload;\n}\n\nfunction createValidationError(message: string): Object {\n  return createError({ message }, 'validationError');\n}\n\nfunction decideURL(endpoint, modules, incomingParams) {\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    return endpoint.postURL(modules, incomingParams);\n  } else if (endpoint.usePatch && endpoint.usePatch(modules, incomingParams)) {\n    return endpoint.patchURL(modules, incomingParams);\n  } else {\n    return endpoint.getURL(modules, incomingParams);\n  }\n}\n\nfunction getAuthToken(endpoint, modules, incomingParams) {\n  let token;\n\n  if (endpoint.getAuthToken) {\n    token = endpoint.getAuthToken(modules, incomingParams);\n  }\n\n  return token;\n}\n\nfunction generatePNSDK(config: Config): string {\n  if (config.sdkName) {\n    return config.sdkName;\n  }\n\n  let base = `PubNub-JS-${config.sdkFamily}`;\n\n  if (config.partnerId) {\n    base += `-${config.partnerId}`;\n  }\n\n  base += `/${config.getVersion()}`;\n\n  let pnsdkSuffix = config._getPnsdkSuffix(' ');\n\n  if (pnsdkSuffix.length > 0) {\n    base += pnsdkSuffix;\n  }\n\n  return base;\n}\n\nfunction getHttpMethod(modules, endpoint, incomingParams) {\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    return 'POST';\n  } else if (endpoint.usePatch && endpoint.usePatch(modules, incomingParams)) {\n    return 'PATCH';\n  } else if (endpoint.useDelete && endpoint.useDelete(modules, incomingParams)) {\n    return 'DELETE';\n  } else {\n    return 'GET';\n  }\n}\n\nfunction signRequest(modules, url, outgoingParams, incomingParams, endpoint) {\n  let { config, crypto } = modules;\n\n  let httpMethod = getHttpMethod(modules, endpoint, incomingParams);\n\n  outgoingParams.timestamp = Math.floor(new Date().getTime() / 1000);\n  let signInput = `${httpMethod}\\n${config.publishKey}\\n${url}\\n${utils.signPamFromParams(outgoingParams)}\\n`;\n\n  if (httpMethod === 'POST') {\n    let payload = endpoint.postPayload(modules, incomingParams);\n    if (typeof payload === 'string') {\n      signInput += payload;\n    } else {\n      signInput += JSON.stringify(payload);\n    }\n  } else if (httpMethod === 'PATCH') {\n    let payload = endpoint.patchPayload(modules, incomingParams);\n    if (typeof payload === 'string') {\n      signInput += payload;\n    } else {\n      signInput += JSON.stringify(payload);\n    }\n  }\n\n  let signature = `v2.${crypto.HMACSHA256(signInput)}`;\n  signature = signature.replace(/\\+/g, '-');\n  signature = signature.replace(/\\//g, '_');\n  signature = signature.replace(/=+$/, '');\n\n  outgoingParams.signature = signature;\n}\n\nexport default function(modules, endpoint, ...args) {\n  let { networking, config, telemetryManager } = modules;\n  const requestId = uuidGenerator.createUUID();\n  let callback = null;\n  let promiseComponent = null;\n  let incomingParams = {};\n\n  if (endpoint.getOperation() === operationConstants.PNTimeOperation || endpoint.getOperation() === operationConstants.PNChannelGroupsOperation) {\n    callback = args[0];\n  } else {\n    incomingParams = args[0];\n    callback = args[1];\n  }\n\n  // bridge in Promise support.\n  if (typeof Promise !== 'undefined' && !callback) {\n    promiseComponent = utils.createPromise();\n  }\n\n  let validationResult = endpoint.validateParams(modules, incomingParams);\n\n  if (validationResult) {\n    if (callback) {\n      return callback(createValidationError(validationResult));\n    } else if (promiseComponent) {\n      promiseComponent.reject(new PubNubError('Validation failed, check status for details', createValidationError(validationResult)));\n      return promiseComponent.promise;\n    }\n    return;\n  }\n\n  let outgoingParams = endpoint.prepareParams(modules, incomingParams);\n  let url = decideURL(endpoint, modules, incomingParams);\n  let callInstance;\n  let networkingParams = { url,\n    operation: endpoint.getOperation(),\n    timeout: endpoint.getRequestTimeout(modules),\n    headers: endpoint.getRequestHeaders ? endpoint.getRequestHeaders() : {}\n  };\n\n  outgoingParams.uuid = config.UUID;\n  outgoingParams.pnsdk = generatePNSDK(config);\n\n  // Add telemetry information (if there is any available).\n  const telemetryLatencies = telemetryManager.operationsLatencyForRequest();\n  if (Object.keys(telemetryLatencies).length) {\n    outgoingParams = { ...outgoingParams, ...telemetryLatencies };\n  }\n\n  if (config.useInstanceId) {\n    outgoingParams.instanceid = config.instanceId;\n  }\n\n  if (config.useRequestId) {\n    outgoingParams.requestid = requestId;\n  }\n\n  if (endpoint.isAuthSupported()) {\n    let token = getAuthToken(endpoint, modules, incomingParams);\n    let tokenOrKey = token || config.getAuthKey();\n\n    if (tokenOrKey) {\n      outgoingParams.auth = tokenOrKey;\n    }\n  }\n\n  if (config.secretKey) {\n    signRequest(modules, url, outgoingParams, incomingParams, endpoint);\n  }\n\n  let onResponse = (status: StatusAnnouncement, payload: Object) => {\n    if (status.error) {\n      if (callback) {\n        callback(status);\n      } else if (promiseComponent) {\n        promiseComponent.reject(new PubNubError('PubNub call failed, check status for details', status));\n      }\n      return;\n    }\n\n    // Stop endpoint latency tracking.\n    telemetryManager.stopLatencyMeasure(endpoint.getOperation(), requestId);\n\n    let parsedPayload = endpoint.handleResponse(modules, payload, incomingParams);\n\n    if (callback) {\n      callback(status, parsedPayload);\n    } else if (promiseComponent) {\n      promiseComponent.fulfill(parsedPayload);\n    }\n  };\n\n  // Start endpoint latency tracking.\n  telemetryManager.startLatencyMeasure(endpoint.getOperation(), requestId);\n\n  if (getHttpMethod(modules, endpoint, incomingParams) === 'POST') {\n    let payload = endpoint.postPayload(modules, incomingParams);\n    callInstance = networking.POST(outgoingParams, payload, networkingParams, onResponse);\n  } else if (getHttpMethod(modules, endpoint, incomingParams) === 'PATCH') {\n    let payload = endpoint.patchPayload(modules, incomingParams);\n    callInstance = networking.PATCH(outgoingParams, payload, networkingParams, onResponse);\n  } else if (getHttpMethod(modules, endpoint, incomingParams) === 'DELETE') {\n    callInstance = networking.DELETE(outgoingParams, networkingParams, onResponse);\n  } else {\n    callInstance = networking.GET(outgoingParams, networkingParams, onResponse);\n  }\n\n  if (endpoint.getOperation() === operationConstants.PNSubscribeOperation) {\n    return callInstance;\n  }\n\n  if (promiseComponent) {\n    return promiseComponent.promise;\n  }\n}\n"],"file":"endpoint.js"}