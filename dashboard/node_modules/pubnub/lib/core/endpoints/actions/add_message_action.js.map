{"version":3,"sources":["core/endpoints/actions/add_message_action.js"],"names":["getOperation","operationConstants","PNAddMessageActionOperation","validateParams","incomingParams","config","action","channel","messageTimetoken","subscribeKey","value","type","length","usePost","postURL","getRequestTimeout","getTransactionTimeout","getRequestHeaders","isAuthSupported","prepareParams","postPayload","modules","handleResponse","addMessageActionResponse","data"],"mappings":";;;;;;;;;;;;;;;;AAEA;;AAKA;;;;AAGO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,2BAA1B;AACD;;AAEM,SAASC,cAAT,OAELC,cAFK,EAGL;AAAA,MAFEC,MAEF,QAFEA,MAEF;AAAA,MACMC,MADN,GAC4CF,cAD5C,CACME,MADN;AAAA,MACcC,OADd,GAC4CH,cAD5C,CACcG,OADd;AAAA,MACuBC,gBADvB,GAC4CJ,cAD5C,CACuBI,gBADvB;AAGA,MAAI,CAACA,gBAAL,EAAuB,OAAO,2BAAP;AACvB,MAAI,CAACH,MAAM,CAACI,YAAZ,EAA0B,OAAO,uBAAP;AAC1B,MAAI,CAACF,OAAL,EAAc,OAAO,yBAAP;AACd,MAAI,CAACD,MAAL,EAAa,OAAO,gBAAP;AACb,MAAI,CAACA,MAAM,CAACI,KAAZ,EAAmB,OAAO,sBAAP;AACnB,MAAI,CAACJ,MAAM,CAACK,IAAZ,EAAkB,OAAO,qBAAP;AAClB,MAAIL,MAAM,CAACK,IAAP,CAAYC,MAAZ,GAAqB,EAAzB,EAA6B,OAAO,+CAAP;AAC9B;;AAEM,SAASC,OAAT,GAAmB;AACxB,SAAO,IAAP;AACD;;AAEM,SAASC,OAAT,QAELV,cAFK,EAGG;AAAA,MAFNC,MAEM,SAFNA,MAEM;AAAA,MACFE,OADE,GAC4BH,cAD5B,CACFG,OADE;AAAA,MACOC,gBADP,GAC4BJ,cAD5B,CACOI,gBADP;AAGR,uCAA8BH,MAAM,CAACI,YAArC,sBAA6DF,OAA7D,sBAAgFC,gBAAhF;AACD;;AAEM,SAASO,iBAAT,QAAsD;AAAA,MAAzBV,MAAyB,SAAzBA,MAAyB;AAC3D,SAAOA,MAAM,CAACW,qBAAP,EAAP;AACD;;AAEM,SAASC,iBAAT,GAAqC;AAC1C,SAAO;AAAE,oBAAgB;AAAlB,GAAP;AACD;;AAEM,SAASC,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,GAAiC;AACtC,SAAO,EAAP;AACD;;AAEM,SAASC,WAAT,CACLC,OADK,EAELjB,cAFK,EAGG;AACR,SAAOA,cAAc,CAACE,MAAtB;AACD;;AAEM,SAASgB,cAAT,CACLD,OADK,EAELE,wBAFK,EAGqB;AAC1B,SAAO;AAAEC,IAAAA,IAAI,EAAED,wBAAwB,CAACC;AAAjC,GAAP;AACD","sourcesContent":["/* @flow */\n\nimport {\n  AddMessageActionInput,\n  AddMessageActionResponse,\n  ModulesInject,\n} from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\n\nexport function getOperation(): string {\n  return operationConstants.PNAddMessageActionOperation;\n}\n\nexport function validateParams(\n  { config }: ModulesInject,\n  incomingParams: AddMessageActionInput\n) {\n  let { action, channel, messageTimetoken } = incomingParams;\n\n  if (!messageTimetoken) return 'Missing message timetoken';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n  if (!channel) return 'Missing message channel';\n  if (!action) return 'Missing Action';\n  if (!action.value) return 'Missing Action.value';\n  if (!action.type) return 'Missing Action.type';\n  if (action.type.length > 15) return 'Action.type value exceed maximum length of 15';\n}\n\nexport function usePost() {\n  return true;\n}\n\nexport function postURL(\n  { config }: ModulesInject,\n  incomingParams: AddMessageActionInput\n): string {\n  let { channel, messageTimetoken } = incomingParams;\n\n  return `/v1/message-actions/${config.subscribeKey}/channel/${channel}/message/${messageTimetoken}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function getRequestHeaders(): Object {\n  return { 'Content-Type': 'application/json' };\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(): Object {\n  return {};\n}\n\nexport function postPayload(\n  modules: ModulesInject,\n  incomingParams: AddMessageActionInput\n): string {\n  return incomingParams.action;\n}\n\nexport function handleResponse(\n  modules: ModulesInject,\n  addMessageActionResponse: Object\n): AddMessageActionResponse {\n  return { data: addMessageActionResponse.data };\n}\n"],"file":"add_message_action.js"}