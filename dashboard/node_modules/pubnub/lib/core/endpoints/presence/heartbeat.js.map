{"version":3,"sources":["core/endpoints/presence/heartbeat.js"],"names":["getOperation","operationConstants","PNHeartbeatOperation","validateParams","modules","config","subscribeKey","getURL","incomingParams","channels","stringifiedChannels","length","join","utils","encodeString","isAuthSupported","getRequestTimeout","getTransactionTimeout","prepareParams","channelGroups","state","params","JSON","stringify","heartbeat","getPresenceTimeout","handleResponse"],"mappings":";;;;;;;;;;;;;AAEA;;AACA;;AACA;;;;AAEO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,oBAA1B;AACD;;AAEM,SAASC,cAAT,CAAwBC,OAAxB,EAAgD;AAAA,MAC/CC,MAD+C,GACpCD,OADoC,CAC/CC,MAD+C;AAGrD,MAAI,CAACA,MAAM,CAACC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASC,MAAT,CAAgBH,OAAhB,EAAwCI,cAAxC,EAAoF;AAAA,MACnFH,MADmF,GACxED,OADwE,CACnFC,MADmF;AAAA,8BAEjEG,cAFiE,CAEnFC,QAFmF;AAAA,MAEnFA,QAFmF,sCAExE,EAFwE;AAGzF,MAAIC,mBAAmB,GAAGD,QAAQ,CAACE,MAAT,GAAkB,CAAlB,GAAsBF,QAAQ,CAACG,IAAT,CAAc,GAAd,CAAtB,GAA2C,GAArE;AACA,wCAA+BP,MAAM,CAACC,YAAtC,sBAA8DO,kBAAMC,YAAN,CAAmBJ,mBAAnB,CAA9D;AACD;;AAEM,SAASK,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,iBAAT,OAAsD;AAAA,MAAzBX,MAAyB,QAAzBA,MAAyB;AAC3D,SAAOA,MAAM,CAACY,qBAAP,EAAP;AACD;;AAEM,SAASC,aAAT,CAAuBd,OAAvB,EAA+CI,cAA/C,EAA2F;AAAA,+BACvDA,cADuD,CAC1FW,aAD0F;AAAA,MAC1FA,aAD0F,uCAC1E,EAD0E;AAAA,8BACvDX,cADuD,CACtEY,KADsE;AAAA,MACtEA,KADsE,sCAC9D,EAD8D;AAAA,MAE1Ff,MAF0F,GAE/ED,OAF+E,CAE1FC,MAF0F;AAGhG,MAAMgB,MAAM,GAAG,EAAf;;AAEA,MAAIF,aAAa,CAACR,MAAd,GAAuB,CAA3B,EAA8B;AAC5BU,IAAAA,MAAM,CAAC,eAAD,CAAN,GAA0BF,aAAa,CAACP,IAAd,CAAmB,GAAnB,CAA1B;AACD;;AAEDS,EAAAA,MAAM,CAACD,KAAP,GAAeE,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAf;AACAC,EAAAA,MAAM,CAACG,SAAP,GAAmBnB,MAAM,CAACoB,kBAAP,EAAnB;AACA,SAAOJ,MAAP;AACD;;AAEM,SAASK,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","sourcesContent":["/* @flow */\n\nimport { HeartbeatArguments, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function getOperation(): string {\n  return operationConstants.PNHeartbeatOperation;\n}\n\nexport function validateParams(modules: ModulesInject) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: HeartbeatArguments): string {\n  let { config } = modules;\n  let { channels = [] } = incomingParams;\n  let stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';\n  return `/v2/presence/sub-key/${config.subscribeKey}/channel/${utils.encodeString(stringifiedChannels)}/heartbeat`;\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: HeartbeatArguments): Object {\n  let { channelGroups = [], state = {} } = incomingParams;\n  let { config } = modules;\n  const params = {};\n\n  if (channelGroups.length > 0) {\n    params['channel-group'] = channelGroups.join(',');\n  }\n\n  params.state = JSON.stringify(state);\n  params.heartbeat = config.getPresenceTimeout();\n  return params;\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"],"file":"heartbeat.js"}