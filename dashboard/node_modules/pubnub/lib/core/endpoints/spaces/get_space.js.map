{"version":3,"sources":["core/endpoints/spaces/get_space.js"],"names":["getOperation","operationConstants","PNGetSpaceOperation","validateParams","modules","incomingParams","spaceId","getURL","config","subscribeKey","getRequestTimeout","getTransactionTimeout","isAuthSupported","getAuthToken","token","tokenManager","getToken","prepareParams","include","params","customFields","undefined","includes","push","includesString","join","length","handleResponse","spacesResponse"],"mappings":";;;;;;;;;;;;;;AAEA;;AAKA;;;;AAEO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,mBAA1B;AACD;;AAEM,SAASC,cAAT,CAAwBC,OAAxB,EAAgDC,cAAhD,EAAkF;AAAA,MACjFC,OADiF,GACrED,cADqE,CACjFC,OADiF;AAGvF,MAAI,CAACA,OAAL,EAAc,OAAO,iBAAP;AACf;;AAEM,SAASC,MAAT,CACLH,OADK,EAELC,cAFK,EAGG;AAAA,MACFG,MADE,GACSJ,OADT,CACFI,MADE;AAER,+BAAsBA,MAAM,CAACC,YAA7B,qBAAoDJ,cAAc,CAACC,OAAnE;AACD;;AAEM,SAASI,iBAAT,OAAsD;AAAA,MAAzBF,MAAyB,QAAzBA,MAAyB;AAC3D,SAAOA,MAAM,CAACG,qBAAP,EAAP;AACD;;AAEM,SAASC,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,YAAT,CAAsBT,OAAtB,EAA8CC,cAA9C,EAAwF;AAC7F,MAAIS,KAAK,GACPV,OAAO,CAACW,YAAR,CAAqBC,QAArB,CAA8B,OAA9B,EAAuCX,cAAc,CAACC,OAAtD,KACAF,OAAO,CAACW,YAAR,CAAqBC,QAArB,CAA8B,OAA9B,CAFF;AAIA,SAAOF,KAAP;AACD;;AAEM,SAASG,aAAT,CACLb,OADK,EAELC,cAFK,EAGG;AAAA,MACFa,OADE,GACUb,cADV,CACFa,OADE;AAER,MAAMC,MAAM,GAAG,EAAf;;AAGA,MAAI,CAACD,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG;AACRE,MAAAA,YAAY,EAAE;AADN,KAAV;AAGD,GAJD,MAIO,IAAIF,OAAO,CAACE,YAAR,KAAyBC,SAA7B,EAAwC;AAC7CH,IAAAA,OAAO,CAACE,YAAR,GAAuB,IAAvB;AACD;;AAED,MAAIF,OAAJ,EAAa;AACX,QAAII,QAAQ,GAAG,EAAf;;AAEA,QAAIJ,OAAO,CAACE,YAAZ,EAA0B;AACxBE,MAAAA,QAAQ,CAACC,IAAT,CAAc,QAAd;AACD;;AAED,QAAIC,cAAc,GAAGF,QAAQ,CAACG,IAAT,CAAc,GAAd,CAArB;;AAEA,QAAID,cAAc,CAACE,MAAf,GAAwB,CAA5B,EAA+B;AAC7BP,MAAAA,MAAM,CAACD,OAAP,GAAiBM,cAAjB;AACD;AACF;;AAED,SAAOL,MAAP;AACD;;AAEM,SAASQ,cAAT,CACLvB,OADK,EAELwB,cAFK,EAGW;AAChB,SAAOA,cAAP;AACD","sourcesContent":["/* @flow */\n\nimport {\n  SingleSpaceInput,\n  SpacesResponse,\n  ModulesInject,\n} from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\nexport function getOperation(): string {\n  return operationConstants.PNGetSpaceOperation;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: SingleSpaceInput) {\n  let { spaceId } = incomingParams;\n\n  if (!spaceId) return 'Missing spaceId';\n}\n\nexport function getURL(\n  modules: ModulesInject,\n  incomingParams: SingleSpaceInput\n): string {\n  let { config } = modules;\n  return `/v1/objects/${config.subscribeKey}/spaces/${incomingParams.spaceId}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function getAuthToken(modules: ModulesInject, incomingParams: SingleSpaceInput): string {\n  let token =\n    modules.tokenManager.getToken('space', incomingParams.spaceId) ||\n    modules.tokenManager.getToken('space');\n\n  return token;\n}\n\nexport function prepareParams(\n  modules: ModulesInject,\n  incomingParams: SingleSpaceInput\n): Object {\n  let { include } = incomingParams;\n  const params = {};\n\n  // default to include custom fields in response\n  if (!include) {\n    include = {\n      customFields: true\n    };\n  } else if (include.customFields === undefined) {\n    include.customFields = true;\n  }\n\n  if (include) {\n    let includes = [];\n\n    if (include.customFields) {\n      includes.push('custom');\n    }\n\n    let includesString = includes.join(',');\n\n    if (includesString.length > 0) {\n      params.include = includesString;\n    }\n  }\n\n  return params;\n}\n\nexport function handleResponse(\n  modules: ModulesInject,\n  spacesResponse: Object\n): SpacesResponse {\n  return spacesResponse;\n}\n"],"file":"get_space.js"}