{"version":3,"sources":["core/pubnub-common.js"],"names":["setup","db","networking","cbor","config","_config","Config","crypto","Crypto","init","tokenManager","_tokenManager","TokenManager","telemetryManager","_telemetryManager","TelemetryManager","maximumSamplesCount","modules","timeEndpoint","endpointCreator","bind","timeEndpointConfig","leaveEndpoint","presenceLeaveEndpointConfig","heartbeatEndpoint","presenceHeartbeatEndpointConfig","setStateEndpoint","presenceSetStateConfig","subscribeEndpoint","subscribeEndpointConfig","listenerManager","_listenerManager","ListenerManager","subscriptionManager","SubscriptionManager","addListener","removeListener","removeAllListeners","parseToken","setToken","setTokens","getToken","getTokens","clearTokens","channelGroups","listGroups","listChannelGroupsConfig","listChannels","listChannelsInChannelGroupConfig","addChannels","addChannelsChannelGroupConfig","removeChannels","removeChannelsChannelGroupConfig","deleteGroup","deleteChannelGroupConfig","push","addPushChannelsConfig","removePushChannelsConfig","deleteDevice","removeDevicePushConfig","listPushChannelsConfig","hereNow","presenceHereNowConfig","whereNow","presenceWhereNowEndpointConfig","getState","presenceGetStateConfig","setState","adaptStateChange","grant","grantEndpointConfig","grantToken","grantTokenEndpointConfig","audit","auditEndpointConfig","publish","publishEndpointConfig","fire","args","callback","replicate","storeInHistory","signal","signalEndpointConfig","history","historyEndpointConfig","deleteMessages","deleteMessagesEndpointConfig","messageCounts","messageCountsEndpointConfig","fetchMessages","fetchMessagesEndpointConfig","addMessageAction","addMessageActionEndpointConfig","removeMessageAction","removeMessageActionEndpointConfig","getMessageActions","getMessageActionEndpointConfig","createUser","createUserEndpointConfig","updateUser","updateUserEndpointConfig","deleteUser","deleteUserEndpointConfig","getUser","getUserEndpointConfig","getUsers","getUsersEndpointConfig","createSpace","createSpaceEndpointConfig","updateSpace","updateSpaceEndpointConfig","deleteSpace","deleteSpaceEndpointConfig","getSpaces","getSpacesEndpointConfig","getSpace","getSpaceEndpointConfig","addMembers","addMembersEndpointConfig","updateMembers","updateMembersEndpointConfig","removeMembers","removeMembersEndpointConfig","getMembers","getMembersEndpointConfig","getMemberships","getMembershipsEndpointConfig","joinSpaces","joinSpacesEndpointConfig","updateMemberships","updateMembershipsEndpointConfig","leaveSpaces","leaveSpacesEndpointConfig","time","subscribe","adaptSubscribeChange","presence","adaptPresenceChange","unsubscribe","adaptUnsubscribeChange","disconnect","reconnect","destroy","isOffline","unsubscribeAll","stop","getSubscribedChannels","getSubscribedChannelGroups","encrypt","decrypt","getAuthKey","setAuthKey","setCipherKey","getUUID","setUUID","getFilterExpression","setFilterExpression","setHeartbeatInterval","hasModule","setProxy","proxy","getVersion","name","suffix","_addPnsdkSuffix","announceNetworkDown","restore","announceNetworkUp","title","body","NotificationsPayload","uuidGenerator","createUUID","OPERATIONS","CATEGORIES"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport Config from './components/config';\nimport Crypto from './components/cryptography/index';\nimport SubscriptionManager from './components/subscription_manager';\nimport TelemetryManager from './components/telemetry_manager';\nimport NotificationsPayload from './components/push_payload';\nimport ListenerManager from './components/listener_manager';\nimport TokenManager from './components/token_manager';\n\nimport endpointCreator from './components/endpoint';\n\nimport * as addChannelsChannelGroupConfig from './endpoints/channel_groups/add_channels';\nimport * as removeChannelsChannelGroupConfig from './endpoints/channel_groups/remove_channels';\nimport * as deleteChannelGroupConfig from './endpoints/channel_groups/delete_group';\nimport * as listChannelGroupsConfig from './endpoints/channel_groups/list_groups';\nimport * as listChannelsInChannelGroupConfig from './endpoints/channel_groups/list_channels';\n\nimport * as addPushChannelsConfig from './endpoints/push/add_push_channels';\nimport * as removePushChannelsConfig from './endpoints/push/remove_push_channels';\nimport * as listPushChannelsConfig from './endpoints/push/list_push_channels';\nimport * as removeDevicePushConfig from './endpoints/push/remove_device';\n\nimport * as presenceLeaveEndpointConfig from './endpoints/presence/leave';\nimport * as presenceWhereNowEndpointConfig from './endpoints/presence/where_now';\nimport * as presenceHeartbeatEndpointConfig from './endpoints/presence/heartbeat';\nimport * as presenceGetStateConfig from './endpoints/presence/get_state';\nimport * as presenceSetStateConfig from './endpoints/presence/set_state';\nimport * as presenceHereNowConfig from './endpoints/presence/here_now';\n\n// Actions API\n\nimport * as addMessageActionEndpointConfig from './endpoints/actions/add_message_action';\nimport * as removeMessageActionEndpointConfig from './endpoints/actions/remove_message_action';\nimport * as getMessageActionEndpointConfig from './endpoints/actions/get_message_actions';\n\n// Objects API\n\nimport * as createUserEndpointConfig from './endpoints/users/create_user';\nimport * as updateUserEndpointConfig from './endpoints/users/update_user';\nimport * as deleteUserEndpointConfig from './endpoints/users/delete_user';\nimport * as getUserEndpointConfig from './endpoints/users/get_user';\nimport * as getUsersEndpointConfig from './endpoints/users/get_users';\nimport * as createSpaceEndpointConfig from './endpoints/spaces/create_space';\nimport * as updateSpaceEndpointConfig from './endpoints/spaces/update_space';\nimport * as deleteSpaceEndpointConfig from './endpoints/spaces/delete_space';\nimport * as getSpacesEndpointConfig from './endpoints/spaces/get_spaces';\nimport * as getSpaceEndpointConfig from './endpoints/spaces/get_space';\nimport * as getMembersEndpointConfig from './endpoints/memberships/get_members';\nimport * as addMembersEndpointConfig from './endpoints/memberships/add_members';\nimport * as updateMembersEndpointConfig from './endpoints/memberships/update_members';\nimport * as removeMembersEndpointConfig from './endpoints/memberships/remove_members';\nimport * as getMembershipsEndpointConfig from './endpoints/memberships/get_memberships';\nimport * as updateMembershipsEndpointConfig from './endpoints/memberships/update_memberships';\nimport * as joinSpacesEndpointConfig from './endpoints/memberships/join_spaces';\nimport * as leaveSpacesEndpointConfig from './endpoints/memberships/leave_spaces';\n\nimport * as auditEndpointConfig from './endpoints/access_manager/audit';\nimport * as grantEndpointConfig from './endpoints/access_manager/grant';\nimport * as grantTokenEndpointConfig from './endpoints/access_manager/grant_token';\n\nimport * as publishEndpointConfig from './endpoints/publish';\nimport * as signalEndpointConfig from './endpoints/signal';\nimport * as historyEndpointConfig from './endpoints/history/get_history';\nimport * as deleteMessagesEndpointConfig from './endpoints/history/delete_messages';\nimport * as messageCountsEndpointConfig from './endpoints/history/message_counts';\nimport * as fetchMessagesEndpointConfig from './endpoints/fetch_messages';\nimport * as timeEndpointConfig from './endpoints/time';\nimport * as subscribeEndpointConfig from './endpoints/subscribe';\n\nimport OPERATIONS from './constants/operations';\nimport CATEGORIES from './constants/categories';\n\nimport { InternalSetupStruct } from './flow_interfaces';\nimport uuidGenerator from './components/uuid';\n\nexport default class {\n  _config: Config;\n  _telemetryManager: TelemetryManager;\n  _listenerManager: ListenerManager;\n  _tokenManager: TokenManager;\n\n  // tell flow about the mounted endpoint\n  time: Function;\n  publish: Function;\n  fire: Function;\n\n  history: Function;\n  deleteMessages: Function;\n  messageCounts: Function;\n  fetchMessages: Function;\n\n  //\n  channelGroups: Object;\n  //\n  push: Object;\n  //\n  hereNow: Function;\n  whereNow: Function;\n  getState: Function;\n  setState: Function;\n  //\n  grant: Function;\n  grantToken: Function;\n  audit: Function;\n  //\n  subscribe: Function;\n  signal: Function;\n  presence: Function;\n  unsubscribe: Function;\n  unsubscribeAll: Function;\n\n  // Actions API\n  addMessageAction: Function;\n  removeMessageAction: Function;\n  getMessageActions: Function;\n\n  // Objects API\n\n  createUser: Function;\n  updateUser: Function;\n  deleteUser: Function;\n  getUser: Function;\n  getUsers: Function;\n  createSpace: Function;\n  updateSpace: Function;\n  deleteSpace: Function;\n  getSpaces: Function;\n  getSpace: Function;\n  getMembers: Function;\n  addMembers: Function;\n  updateMembers: Function;\n  removeMembers: Function;\n  getMemberships: Function;\n  joinSpaces: Function;\n  updateMemberships: Function;\n  leaveSpaces: Function;\n\n  disconnect: Function;\n  reconnect: Function;\n\n  destroy: Function;\n  stop: Function;\n\n  getSubscribedChannels: Function;\n  getSubscribedChannelGroups: Function;\n\n  addListener: Function;\n  removeListener: Function;\n  removeAllListeners: Function;\n\n  parseToken: Function;\n  setToken: Function;\n  setTokens: Function;\n  getToken: Function;\n  getTokens: Function;\n  clearTokens: Function;\n\n  getAuthKey: Function;\n  setAuthKey: Function;\n\n  setCipherKey: Function;\n  setUUID: Function;\n  getUUID: Function;\n\n  getFilterExpression: Function;\n  setFilterExpression: Function;\n\n  setHeartbeatInterval: Function;\n\n  setProxy: Function;\n\n  encrypt: Function;\n  decrypt: Function;\n\n  //\n\n  constructor(setup: InternalSetupStruct) {\n    let { db, networking, cbor } = setup;\n\n    const config = (this._config = new Config({ setup, db }));\n    const crypto = new Crypto({ config });\n\n    networking.init(config);\n\n    const tokenManager = (this._tokenManager = new TokenManager(config, cbor));\n    const telemetryManager = (this._telemetryManager = new TelemetryManager({ maximumSamplesCount: 60000 }));\n\n    let modules = { config, networking, crypto, tokenManager, telemetryManager };\n\n    const timeEndpoint = endpointCreator.bind(\n      this,\n      modules,\n      timeEndpointConfig\n    );\n    const leaveEndpoint = endpointCreator.bind(\n      this,\n      modules,\n      presenceLeaveEndpointConfig\n    );\n    const heartbeatEndpoint = endpointCreator.bind(\n      this,\n      modules,\n      presenceHeartbeatEndpointConfig\n    );\n    const setStateEndpoint = endpointCreator.bind(\n      this,\n      modules,\n      presenceSetStateConfig\n    );\n    const subscribeEndpoint = endpointCreator.bind(\n      this,\n      modules,\n      subscribeEndpointConfig\n    );\n\n    // managers\n    const listenerManager = (this._listenerManager = new ListenerManager());\n\n    const subscriptionManager = new SubscriptionManager({\n      timeEndpoint,\n      leaveEndpoint,\n      heartbeatEndpoint,\n      setStateEndpoint,\n      subscribeEndpoint,\n      crypto: modules.crypto,\n      config: modules.config,\n      listenerManager,\n    });\n\n    this.addListener = listenerManager.addListener.bind(listenerManager);\n    this.removeListener = listenerManager.removeListener.bind(listenerManager);\n    this.removeAllListeners = listenerManager.removeAllListeners.bind(\n      listenerManager\n    );\n\n    this.parseToken = tokenManager.parseToken.bind(tokenManager);\n    this.setToken = tokenManager.setToken.bind(tokenManager);\n    this.setTokens = tokenManager.setTokens.bind(tokenManager);\n    this.getToken = tokenManager.getToken.bind(tokenManager);\n    this.getTokens = tokenManager.getTokens.bind(tokenManager);\n    this.clearTokens = tokenManager.clearTokens.bind(tokenManager);\n\n    /* channel groups */\n    this.channelGroups = {\n      listGroups: endpointCreator.bind(this, modules, listChannelGroupsConfig),\n      listChannels: endpointCreator.bind(\n        this,\n        modules,\n        listChannelsInChannelGroupConfig\n      ),\n      addChannels: endpointCreator.bind(\n        this,\n        modules,\n        addChannelsChannelGroupConfig\n      ),\n      removeChannels: endpointCreator.bind(\n        this,\n        modules,\n        removeChannelsChannelGroupConfig\n      ),\n      deleteGroup: endpointCreator.bind(\n        this,\n        modules,\n        deleteChannelGroupConfig\n      ),\n    };\n    /* push */\n    this.push = {\n      addChannels: endpointCreator.bind(this, modules, addPushChannelsConfig),\n      removeChannels: endpointCreator.bind(\n        this,\n        modules,\n        removePushChannelsConfig\n      ),\n      deleteDevice: endpointCreator.bind(this, modules, removeDevicePushConfig),\n      listChannels: endpointCreator.bind(this, modules, listPushChannelsConfig),\n    };\n    /* presence */\n    this.hereNow = endpointCreator.bind(this, modules, presenceHereNowConfig);\n    this.whereNow = endpointCreator.bind(\n      this,\n      modules,\n      presenceWhereNowEndpointConfig\n    );\n    this.getState = endpointCreator.bind(this, modules, presenceGetStateConfig);\n    this.setState = subscriptionManager.adaptStateChange.bind(\n      subscriptionManager\n    );\n    /* PAM */\n    this.grant = endpointCreator.bind(this, modules, grantEndpointConfig);\n    this.grantToken = endpointCreator.bind(this, modules, grantTokenEndpointConfig);\n    this.audit = endpointCreator.bind(this, modules, auditEndpointConfig);\n    //\n    this.publish = endpointCreator.bind(this, modules, publishEndpointConfig);\n\n    this.fire = (args, callback) => {\n      args.replicate = false;\n      args.storeInHistory = false;\n      return this.publish(args, callback);\n    };\n\n    this.signal = endpointCreator.bind(this, modules, signalEndpointConfig);\n\n    this.history = endpointCreator.bind(this, modules, historyEndpointConfig);\n    this.deleteMessages = endpointCreator.bind(\n      this,\n      modules,\n      deleteMessagesEndpointConfig\n    );\n    this.messageCounts = endpointCreator.bind(\n      this,\n      modules,\n      messageCountsEndpointConfig\n    );\n    this.fetchMessages = endpointCreator.bind(\n      this,\n      modules,\n      fetchMessagesEndpointConfig\n    );\n\n    // Actions API\n\n    this.addMessageAction = endpointCreator.bind(\n      this,\n      modules,\n      addMessageActionEndpointConfig\n    );\n\n    this.removeMessageAction = endpointCreator.bind(\n      this,\n      modules,\n      removeMessageActionEndpointConfig\n    );\n\n    this.getMessageActions = endpointCreator.bind(\n      this,\n      modules,\n      getMessageActionEndpointConfig\n    );\n\n    // Objects API\n\n    this.createUser = endpointCreator.bind(\n      this,\n      modules,\n      createUserEndpointConfig\n    );\n\n    this.updateUser = endpointCreator.bind(\n      this,\n      modules,\n      updateUserEndpointConfig\n    );\n\n    this.deleteUser = endpointCreator.bind(\n      this,\n      modules,\n      deleteUserEndpointConfig\n    );\n\n    this.getUser = endpointCreator.bind(\n      this,\n      modules,\n      getUserEndpointConfig\n    );\n\n    this.getUsers = endpointCreator.bind(\n      this,\n      modules,\n      getUsersEndpointConfig\n    );\n\n    this.createSpace = endpointCreator.bind(\n      this,\n      modules,\n      createSpaceEndpointConfig\n    );\n\n    this.updateSpace = endpointCreator.bind(\n      this,\n      modules,\n      updateSpaceEndpointConfig\n    );\n\n    this.deleteSpace = endpointCreator.bind(\n      this,\n      modules,\n      deleteSpaceEndpointConfig\n    );\n\n    this.getSpaces = endpointCreator.bind(\n      this,\n      modules,\n      getSpacesEndpointConfig\n    );\n\n    this.getSpace = endpointCreator.bind(\n      this,\n      modules,\n      getSpaceEndpointConfig\n    );\n\n    this.addMembers = endpointCreator.bind(\n      this,\n      modules,\n      addMembersEndpointConfig\n    );\n\n    this.updateMembers = endpointCreator.bind(\n      this,\n      modules,\n      updateMembersEndpointConfig\n    );\n\n    this.removeMembers = endpointCreator.bind(\n      this,\n      modules,\n      removeMembersEndpointConfig\n    );\n\n    this.getMembers = endpointCreator.bind(\n      this,\n      modules,\n      getMembersEndpointConfig\n    );\n\n    this.getMemberships = endpointCreator.bind(\n      this,\n      modules,\n      getMembershipsEndpointConfig\n    );\n\n    this.joinSpaces = endpointCreator.bind(\n      this,\n      modules,\n      joinSpacesEndpointConfig\n    );\n\n    this.updateMemberships = endpointCreator.bind(\n      this,\n      modules,\n      updateMembershipsEndpointConfig\n    );\n\n    this.leaveSpaces = endpointCreator.bind(\n      this,\n      modules,\n      leaveSpacesEndpointConfig\n    );\n\n    this.time = timeEndpoint;\n\n    // subscription related methods\n    this.subscribe = subscriptionManager.adaptSubscribeChange.bind(\n      subscriptionManager\n    );\n    this.presence = subscriptionManager.adaptPresenceChange.bind(\n      subscriptionManager\n    );\n    this.unsubscribe = subscriptionManager.adaptUnsubscribeChange.bind(\n      subscriptionManager\n    );\n    this.disconnect = subscriptionManager.disconnect.bind(subscriptionManager);\n    this.reconnect = subscriptionManager.reconnect.bind(subscriptionManager);\n\n    this.destroy = (isOffline: boolean) => {\n      subscriptionManager.unsubscribeAll(isOffline);\n      subscriptionManager.disconnect();\n    };\n\n    // --- deprecated  ------------------\n    this.stop = this.destroy; // --------\n    // --- deprecated  ------------------\n\n    this.unsubscribeAll = subscriptionManager.unsubscribeAll.bind(\n      subscriptionManager\n    );\n\n    this.getSubscribedChannels = subscriptionManager.getSubscribedChannels.bind(\n      subscriptionManager\n    );\n    this.getSubscribedChannelGroups = subscriptionManager.getSubscribedChannelGroups.bind(\n      subscriptionManager\n    );\n\n    // mount crypto\n    this.encrypt = crypto.encrypt.bind(crypto);\n    this.decrypt = crypto.decrypt.bind(crypto);\n\n    /* config */\n    this.getAuthKey = modules.config.getAuthKey.bind(modules.config);\n    this.setAuthKey = modules.config.setAuthKey.bind(modules.config);\n    this.setCipherKey = modules.config.setCipherKey.bind(modules.config);\n    this.getUUID = modules.config.getUUID.bind(modules.config);\n    this.setUUID = modules.config.setUUID.bind(modules.config);\n    this.getFilterExpression = modules.config.getFilterExpression.bind(\n      modules.config\n    );\n    this.setFilterExpression = modules.config.setFilterExpression.bind(\n      modules.config\n    );\n\n    this.setHeartbeatInterval = modules.config.setHeartbeatInterval.bind(\n      modules.config\n    );\n\n    if (networking.hasModule('proxy')) {\n      this.setProxy = (proxy) => {\n        modules.config.setProxy(proxy);\n        this.reconnect();\n      };\n    }\n  }\n\n  getVersion(): string {\n    return this._config.getVersion();\n  }\n\n  _addPnsdkSuffix(name: string, suffix: string) {\n    this._config._addPnsdkSuffix(name, suffix);\n  }\n\n  // network hooks to indicate network changes\n  networkDownDetected() {\n    this._listenerManager.announceNetworkDown();\n\n    if (this._config.restore) {\n      this.disconnect();\n    } else {\n      this.destroy(true);\n    }\n  }\n\n  networkUpDetected() {\n    this._listenerManager.announceNetworkUp();\n    this.reconnect();\n  }\n\n  static notificationPayload(title: ?string, body: ?string): NotificationsPayload {\n    return new NotificationsPayload(title, body);\n  }\n\n  static generateUUID(): string {\n    return uuidGenerator.createUUID();\n  }\n\n  static OPERATIONS = OPERATIONS;\n  static CATEGORIES = CATEGORIES;\n}\n"],"file":"pubnub-common.js"}