{"version":3,"sources":["networking/utils.js"],"names":["encodedKeyValuePair","pairs","key","value","Array","isArray","forEach","item","Object","keys","subkey","push","encodeURIComponent","buildUrl","url","params","join"],"mappings":";;;;;;;;;;AAEO,SAASA,mBAAT,CACLC,KADK,EAELC,GAFK,EAGLC,KAHK,EAIC;AACN,MAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,QAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxBA,MAAAA,KAAK,CAACG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtBP,QAAAA,mBAAmB,CAACC,KAAD,EAAQC,GAAR,EAAaK,IAAb,CAAnB;AACD,OAFD;AAGD,KAJD,MAIO,IAAI,QAAOJ,KAAP,MAAiB,QAArB,EAA+B;AACpCK,MAAAA,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBG,OAAnB,CAA2B,UAACI,MAAD,EAAY;AACrCV,QAAAA,mBAAmB,CAACC,KAAD,YAAWC,GAAX,cAAkBQ,MAAlB,QAA6BP,KAAK,CAACO,MAAD,CAAlC,CAAnB;AACD,OAFD;AAGD,KAJM,MAIA;AACLT,MAAAA,KAAK,CAACU,IAAN,WAAcC,kBAAkB,CAACV,GAAD,CAAhC,cAAyCU,kBAAkB,CAACT,KAAD,CAA3D;AACD;AACF,GAZD,MAYO,IAAIA,KAAK,KAAK,IAAd,EAAoB;AACzBF,IAAAA,KAAK,CAACU,IAAN,CAAWC,kBAAkB,WAAIA,kBAAkB,CAACV,GAAD,CAAtB,EAA7B;AACD;AACF;;AAEM,SAASW,QAAT,CAAkBC,GAAlB,EAA+BC,MAA/B,EAAuD;AAC5D,MAAId,KAAK,GAAG,EAAZ;AAEAO,EAAAA,MAAM,CAACC,IAAP,CAAYM,MAAZ,EAAoBT,OAApB,CAA4B,UAACJ,GAAD,EAAS;AACnCF,IAAAA,mBAAmB,CAACC,KAAD,EAAQC,GAAR,EAAaa,MAAM,CAACb,GAAD,CAAnB,CAAnB;AACD,GAFD;AAIA,mBAAUY,GAAV,cAAiBb,KAAK,CAACe,IAAN,CAAW,GAAX,CAAjB;AACD","sourcesContent":["/* @flow */\n\nexport function encodedKeyValuePair(\n  pairs: Array<string>,\n  key: string,\n  value: Object\n): void {\n  if (value != null) {\n    if (Array.isArray(value)) {\n      value.forEach((item) => {\n        encodedKeyValuePair(pairs, key, item);\n      });\n    } else if (typeof value === 'object') {\n      Object.keys(value).forEach((subkey) => {\n        encodedKeyValuePair(pairs, `${key}[${subkey}]`, value[subkey]);\n      });\n    } else {\n      pairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n    }\n  } else if (value === null) {\n    pairs.push(encodeURIComponent(`${encodeURIComponent(key)}`));\n  }\n}\n\nexport function buildUrl(url: string, params: Object): string {\n  let pairs = [];\n\n  Object.keys(params).forEach((key) => {\n    encodedKeyValuePair(pairs, key, params[key]);\n  });\n\n  return `${url}?${pairs.join('&')}`;\n}\n"],"file":"utils.js"}